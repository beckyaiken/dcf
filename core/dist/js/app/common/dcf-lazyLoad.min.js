/**
 * @project        dcf
 * @author         Digital Campus Nebraska
 * @website        http://digitalcampus.us/
 * @copyright      Copyright (c) 2019, BSD-3-Clause
 *
 */
"use strict";var _createClass=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}!function(e,t){"function"==typeof define&&define.amd?define([],t):"object"===("undefined"==typeof exports?"undefined":_typeof(exports))?module.exports=t():e.dcfLazyLoad=t()}(void 0,function(){return function(){function e(){var t=this;_classCallCheck(this,e),this.onIntersection=function(e,n){0===t.imageCount&&t.observer.disconnect();for(var i=0;i<e.length;i++){var o=e[i];o.intersectionRatio>0&&(t.imageCount--,t.preloadImage(o.target),t.applyImage(o.target),t.observer.unobserve(o.target))}},this.imagesList=document.querySelectorAll("[loading=lazy], .dcf-lazy-load"),this.observerConfig={rootMargin:"0px 0px 50px 0px",threshold:[0]}}return _createClass(e,[{key:"pxTOvw",value:function(e){var t=window,n=document,i=n.documentElement,o=n.getElementsByTagName("body")[0];return 100*e/(t.innerWidth||i.clientWidth||o.clientWidth)+"vw"}},{key:"applyImage",value:function(e){var t=e.dataset.src,n=e.dataset.srcset||null,i=e.sizes||"auto";t&&(e.classList.add("dcf-lazy-loaded"),e.classList.remove("dcf-lazy-load"),t&&(e.src=t),t&&e.removeAttribute("data-src"),n&&(e.srcset=n),n&&e.removeAttribute("data-srcset"),"auto"==i&&(e.sizes=this.pxTOvw(e.parentElement.clientWidth)))}},{key:"fetchImage",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;return new Promise(function(i,o){var a=new Image;e&&(a.src=e),t&&(a.srcset=t),n&&(a.sizes=n),a.onload=i,a.onerror=o})}},{key:"preloadImage",value:function(e){var t=e.dataset.src,n=e.dataset.srcset,i=e.dataset.sizes||null;if(t)return this.fetchImage(t,n,i).catch(function(e){return"Image failed to fetch "+e.mes})}},{key:"loadImagesImmediately",value:function(e){for(var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=0;n<e.length;n++){var i=e[n];!0===t&&this.preloadImage(i),this.applyImage(i)}}},{key:"disconnect",value:function(){this.observer&&this.observer.disconnect()}},{key:"initialize",value:function(){if(this.imagesList)if(this.imageCount=this.imagesList.length,"loading"in HTMLImageElement.prototype)this.loadImagesImmediately(this.imagesList,!1);else if("IntersectionObserver"in window){this.observer=new IntersectionObserver(this.onIntersection,this.observerConfig);for(var e=0;e<this.imageCount;e++){var t=this.imagesList[e];t.classList.contains("dcf-lazy-loaded")||this.observer.observe(t)}}else this.loadImagesImmediately(this.imagesList)}}]),e}()});
//# sourceMappingURL=dcf-lazyLoad.min.js.map
