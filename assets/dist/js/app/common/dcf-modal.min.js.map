{"version":3,"sources":["common/dcf-modal.js"],"names":["_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","_typeof","Symbol","iterator","obj","constructor","_classCallCheck","instance","TypeError","root","factory","define","amd","exports","module","require","dcfModal","dcfHelperUuidv4","undefined","uuidv4","Modal","modals","bodyScrollLock","this","disableBodyScroll","enableBodyScroll","value","el","body","document","querySelector","firstChild","firstElementChild","insertBefore","modalId","openBtnId","nonModals","getElementById","modal","getAttribute","closeModal","thisModal","modalOpen","currentBtn","currentModal","forEach","array","setAttribute","classList","add","remove","tabFocusEls","querySelectorAll","firstTabFocusEl","lastTabFocusEl","focus","addEventListener","e","keyCode","shiftKey","activeElement","preventDefault","modalClosed","removeAttribute","modalTransition","removeEventListener","contains","btnOpenModal","btnId","modalInstance","openModal","btnCloseModal","modalWrapper","event","which","d","Date","getTime","d2","performance","now","replace","c","r","Math","random","floor","toString","btnsOpenModal","btnsCloseModal","modalsWrapper","modalsContent","modalsHeader","generateUUID","btnOpenListen","_i","modalContent","modalHeader","modalHeadingId","id","prependBody","escListen","overlayListen","btnCloseListen"],"mappings":"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","file":"dcf-modal.min.js","sourcesContent":["'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n;(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(['./dcf-uuidGen'], factory);\n  } else if ((typeof exports === 'undefined' ? 'undefined' : _typeof(exports)) === 'object') {\n    module.exports = factory(require('./dcf-uuidGen'));\n  } else {\n    root.dcfModal = factory(root.dcfHelperUuidv4);\n  }\n})(undefined, function (uuidv4) {\n  var Modal = function () {\n    /**\n     * class constructor\n     * @param {modals} modals of selected modals\n     */\n    function Modal(modals, bodyScrollLock) {\n      _classCallCheck(this, Modal);\n\n      this.modals = modals;\n      this.disableBodyScroll = null;\n      this.enableBodyScroll = null;\n      if (bodyScrollLock && bodyScrollLock.disableBodyScroll && bodyScrollLock.enableBodyScroll) {\n        this.disableBodyScroll = bodyScrollLock.disableBodyScroll;\n        this.enableBodyScroll = bodyScrollLock.enableBodyScroll;\n      }\n    }\n\n    /**\n     * Prepend modals to body so that elements outside of modal can be made inert\n     * @param {string} el: the element that we are targetting\n     */\n\n\n    _createClass(Modal, [{\n      key: 'prependBody',\n      value: function prependBody(el) {\n        var body = document.querySelector('body');\n        var firstChild = body.firstElementChild;\n        body.insertBefore(el, firstChild);\n      }\n\n      // Open modal\n\n    }, {\n      key: 'openModal',\n      value: function openModal(modalId, openBtnId) {\n\n        var body = document.querySelector('body');\n        var skipNav = document.getElementById('dcf-skip-nav');\n        var header = document.getElementById('dcf-header');\n        var main = document.getElementById('dcf-main');\n        var footer = document.getElementById('dcf-footer');\n        var nonModals = [skipNav, header, main, footer];\n\n        for (var i = 0; i < this.modals.length; i++) {\n          var modal = this.modals[i];\n          if (modal.getAttribute('id') !== modalId) {\n            this.closeModal(modal.getAttribute('id'));\n          }\n        }\n\n        var thisModal = document.getElementById(modalId);\n        var modalOpen = thisModal.getAttribute('aria-hidden') === 'false' ? true : false;\n\n        if (openBtnId) {\n          this.currentBtn = openBtnId;\n        }\n\n        this.currentModal = modalId;\n\n        // Don't open modal if it's already open\n        if (modalOpen) {\n          return;\n        }\n\n        // Set elements outside of modal to be inert and hidden from screen readers\n        nonModals.forEach(function (el, array) {\n          el.setAttribute('aria-hidden', 'true');\n          el.setAttribute('inert', '');\n        });\n\n        // Prevent body from scrolling\n        if (this.disableBodyScroll) {\n          this.disableBodyScroll(thisModal);\n        }\n\n        // Add `.dcf-modal-is-open` helper class to body\n        body.classList.add('dcf-modal-is-open');\n\n        // Set attribute for this modal\n        thisModal.setAttribute('aria-hidden', 'false');\n\n        // Add/remove classes to this modal\n        thisModal.classList.remove('dcf-opacity-0', 'dcf-pointer-events-none', 'dcf-invisible');\n        thisModal.classList.add('dcf-opacity-100', 'dcf-pointer-events-auto');\n\n        var keycodeTab = 9;\n        var tabFocusEls = thisModal.querySelectorAll('button:not([hidden]):not([disabled]), [href]:not([hidden]), input:not([hidden]):' + 'not([type=\"hidden\"]):not([disabled]), select:not([hidden]):not([disabled]), text' + 'area:not([hidden]):not([disabled]), [tabindex=\"0\"]:not([hidden]):not([disabled])' + ', summary:not([hidden]), [contenteditable]:not([hidden]), audio[controls]:not([h' + 'idden]), video[controls]:not([hidden])');\n        var firstTabFocusEl = tabFocusEls[0];\n        var lastTabFocusEl = tabFocusEls[tabFocusEls.length - 1];\n\n        // Send focus to the modal\n        thisModal.focus();\n\n        // Trap focus inside the modal content\n        thisModal.addEventListener('keydown', function (e) {\n\n          var isTabPressed = e.key === 'Tab' || e.keyCode === keycodeTab;\n\n          if (!isTabPressed) {\n            return;\n          }\n\n          if (e.key === 'Tab' || e.keyCode === keycodeTab) {\n            if (e.shiftKey) {\n              // Tab backwards (shift + tab)\n              if (document.activeElement === firstTabFocusEl) {\n                e.preventDefault();\n                lastTabFocusEl.focus();\n              }\n            } else {\n              // Tab forwards\n              if (document.activeElement === lastTabFocusEl) {\n                e.preventDefault();\n                firstTabFocusEl.focus();\n              }\n            }\n          }\n        });\n      }\n\n      // Close modal\n\n    }, {\n      key: 'closeModal',\n      value: function closeModal(modalId) {\n\n        var body = document.querySelector('body');\n        var skipNav = document.getElementById('dcf-skip-nav');\n        var header = document.getElementById('dcf-header');\n        var main = document.getElementById('dcf-main');\n        var footer = document.getElementById('dcf-footer');\n        var nonModals = [skipNav, header, main, footer];\n        var thisModal = document.getElementById(modalId);\n        var modalClosed = thisModal.getAttribute('aria-hidden') === 'true' ? true : false;\n        this.currentModal = null;\n\n        // Don't close modal if it's already closed\n        if (modalClosed) {\n          return;\n        }\n\n        // Remove `.dcf-modal-is-open` helper class from body\n        body.classList.remove('dcf-modal-is-open');\n\n        // Restore visibility andd functionality to elements outside of modal\n        nonModals.forEach(function (el, array) {\n          el.setAttribute('aria-hidden', 'false');\n          el.removeAttribute('inert');\n        });\n\n        // Set attribute for this modal\n        thisModal.setAttribute('aria-hidden', 'true');\n\n        // Add/remove classes to this modal\n        thisModal.classList.remove('dcf-opacity-100', 'dcf-pointer-events-auto');\n        thisModal.classList.add('dcf-opacity-0', 'dcf-pointer-events-none');\n\n        // Modal transition\n        function modalTransition() {\n\n          // Remove event listener after the modal transition\n          thisModal.removeEventListener('transitionend', modalTransition);\n\n          // Add the `.dcf-invisible` class to this modal after the transition\n          if (!thisModal.classList.contains('dcf-invisible')) {\n            thisModal.classList.add('dcf-invisible');\n          }\n        }\n\n        // Add event listener for the end of the modal transition\n        thisModal.addEventListener('transitionend', modalTransition);\n\n        // Send focus back to button that opened modal\n        if (this.currentBtn) {\n          document.getElementById(this.currentBtn).focus();\n        }\n\n        // Allow body to scroll\n        if (this.enableBodyScroll) {\n          this.enableBodyScroll(thisModal);\n        }\n      }\n    }, {\n      key: 'btnOpenListen',\n      value: function btnOpenListen(btnOpenModal, modalId, btnId) {\n        var modalInstance = this;\n\n        // Listen for when 'open modal' button is pressed\n        btnOpenModal.addEventListener('click', function () {\n\n          // Open modal when button is pressed\n          modalInstance.openModal(modalId, btnId);\n        }, false);\n      }\n    }, {\n      key: 'btnCloseListen',\n      value: function btnCloseListen(btnCloseModal, modal) {\n        var modalInstance = this;\n\n        // Listen for when 'close modal' button is pressed\n        btnCloseModal.addEventListener('click', function () {\n\n          // Open modal when button is pressed\n          modalInstance.closeModal(modal.getAttribute('id'));\n        }, false);\n      }\n    }, {\n      key: 'overlayListen',\n      value: function overlayListen(modal, modalWrapper) {\n        var modalInstance = this;\n\n        // Listen for clicks on the open modal\n        modal.addEventListener('click', function (event) {\n\n          // If the click is in modal wrapper, leave the modal open\n          if (modalWrapper.contains(event.target)) {\n            return;\n          }\n\n          // If the click is outside the modal wrapper (on the modal overlay), close the modal\n          modalInstance.closeModal(modal.getAttribute('id'));\n        });\n      }\n    }, {\n      key: 'escListen',\n      value: function escListen() {\n        var modalInstance = this;\n\n        // Listen for when 'esc' key is pressed\n        document.addEventListener('keydown', function (event) {\n\n          // Close the currently open modal when 'esc' key is pressed\n          if (event.which === 27 && modalInstance.currentModal) {\n            event.preventDefault();\n            modalInstance.closeModal(modalInstance.currentModal);\n          }\n        });\n      }\n    }, {\n      key: 'generateUUID',\n      value: function generateUUID() {\n        var d = new Date().getTime();\n        var d2 = performance && performance.now && performance.now() * 1000 || 0;\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n          var r = Math.random() * 16;\n          if (d > 0) {\n            r = (d + r) % 16 | 0;\n            d = Math.floor(d / 16);\n          } else {\n            r = (d2 + r) % 16 | 0;\n            d2 = Math.floor(d2 / 16);\n          }\n          return (c === 'x' ? r : r & 0x3 | 0x8).toString(16);\n        });\n      }\n    }, {\n      key: 'initialize',\n      value: function initialize() {\n        if (!this.modals) {\n          return;\n        }\n\n        // Define constants used in modal component\n        var body = document.querySelector('body');\n        var btnsOpenModal = document.querySelectorAll('.dcf-btn-open-modal');\n        var btnsCloseModal = document.querySelectorAll('.dcf-btn-close-modal');\n        var modalsWrapper = document.querySelectorAll('.dcf-modal-wrapper');\n        var modalsContent = document.querySelectorAll('.dcf-modal-content');\n        var modalsHeader = document.querySelectorAll('.dcf-modal-header');\n\n        var currentBtn = null;\n        var currentModal = null;\n\n        // Loop through all buttons that open modals\n        for (var i = 0; i < btnsOpenModal.length; i++) {\n          var btnOpenModal = btnsOpenModal[i];\n          var modalId = btnOpenModal.getAttribute('data-opens-modal');\n\n          // Generate unique ID for each 'open modal' button\n          var btnId = this.generateUUID();\n          btnOpenModal.setAttribute('id', btnId);\n\n          // Buttons are disabled by default until JavaScript has loaded.\n          // Remove the 'disabled' attribute to make them functional.\n          btnOpenModal.removeAttribute('disabled');\n          this.btnOpenListen(btnOpenModal, modalId, btnId);\n        }\n\n        // Loop through all modals\n        for (var _i = 0; _i < this.modals.length; _i++) {\n          var modal = this.modals[_i];\n          var modalWrapper = modalsWrapper[_i];\n          var modalContent = modalsContent[_i];\n          var modalHeader = modalsHeader[_i];\n          var btnCloseModal = btnsCloseModal[_i];\n          var _modalId = modal.id;\n          var modalHeadingId = _modalId + '-heading';\n\n          // Get all headings in each modal header\n          var modalHeadings = modalHeader.querySelectorAll('h1, h2, h3, h4, h5, h6');\n\n          // Set ID on the first heading of each modal\n          modalHeadings[0].id = modalHeadingId;\n\n          // Prepend modals to body so that elements outside of modal can be made inert when modal is open\n          this.prependBody(modal);\n\n          // Modals are hidden by default until JavaScript has loaded.\n          // Remove `hidden` attribute, then later replace with `.dcf-invisible` to allow for modal transitions.\n          modal.removeAttribute('hidden');\n\n          // Set attributes for each modal\n          modal.setAttribute('aria-labelledby', modalHeadingId);\n          modal.setAttribute('aria-hidden', 'true');\n          modal.setAttribute('role', 'dialog');\n          modal.setAttribute('tabindex', '-1');\n\n          // Check modal for any additional classes\n          if (modal.classList.length === 1 && modal.classList.contains('dcf-modal')) {\n            // If no custom classes are present, add default background utility class to modal\n            modal.classList.add('dcf-bg-overlay-dark');\n          }\n\n          // Add default utility classes to each modal\n          modal.classList.add('dcf-fixed', 'dcf-pin-top', 'dcf-pin-left', 'dcf-h-100%', 'dcf-w-100%', 'dcf-d-flex', 'dcf-ai-center', 'dcf-jc-center', 'dcf-opacity-0', 'dcf-pointer-events-none', 'dcf-invisible');\n\n          // Set attribute for modal wrapper\n          modalWrapper.setAttribute('role', 'document');\n\n          // Check modal wrapper for any additional classes\n          if (modalWrapper.classList.length === 1 && modalWrapper.classList.contains('dcf-modal-wrapper')) {\n            // If no custom classes are present, add default utility classes to modal wrapper\n            modalWrapper.classList.add('dcf-h-auto', 'dcf-overflow-y-auto');\n          }\n\n          // Check modal header for any additional classes\n          if (modalHeader.classList.length === 1 && modalHeader.classList.contains('dcf-modal-header')) {\n            // If no custom classes are present, add default utility classes to modal header\n            modalHeader.classList.add('dcf-wrapper', 'dcf-pt-8', 'dcf-sticky', 'dcf-pin-top');\n          }\n\n          // Check each 'close' button for any additional classes\n          if (btnCloseModal.classList.length === 1 && btnCloseModal.classList.contains('dcf-btn-close-modal')) {\n            // If no custom classes are present, add default utility classes to 'close' button\n            btnCloseModal.classList.add('dcf-btn', 'dcf-btn-tertiary', 'dcf-absolute', 'dcf-pin-top', 'dcf-pin-right', 'dcf-z-1');\n          }\n\n          // Check modal content for any additional classes\n          if (modalContent.classList.length === 1 && modalContent.classList.contains('dcf-modal-content')) {\n            // If no custom classes are present, add default utility classes to modal content\n            modalContent.classList.add('dcf-wrapper', 'dcf-pb-8');\n          }\n\n          // Set attributes for each 'close' button\n          btnCloseModal.setAttribute('type', 'button');\n          btnCloseModal.setAttribute('aria-label', 'Close');\n\n          this.escListen();\n          this.overlayListen(modal, modalWrapper);\n          this.btnCloseListen(btnCloseModal, modal);\n        }\n      }\n    }]);\n\n    return Modal;\n  }();\n\n  return Modal;\n});"]}