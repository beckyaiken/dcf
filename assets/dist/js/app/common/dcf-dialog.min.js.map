{"version":3,"sources":["common/dcf-dialog.js"],"names":["_typeof","Symbol","iterator","obj","constructor","prototype","root","factory","define","amd","exports","module","dcfDialog","undefined","dialogPolyfill","slice","call","document","querySelectorAll","forEach","modalContainer","trigger","querySelector","modalDialog","closeButton","window","HTMLDialogElement","registerDialog","addEventListener","showModal","style","top","scrollHeight","close","el","target"],"mappings":";;;;;;;AAAA,aAEA,IAAIA,QAA4B,mBAAXC,QAAoD,iBAApBA,OAAOC,SAAwB,SAAUC,GAAO,cAAcA,GAAS,SAAUA,GAAO,OAAOA,GAAyB,mBAAXF,QAAyBE,EAAIC,cAAgBH,QAAUE,IAAQF,OAAOI,UAAY,gBAAkBF,IAErQ,SAAWG,EAAMC,GACM,mBAAXC,QAAyBA,OAAOC,IACzCD,OAAO,GAAID,GACoE,YAAlD,oBAAZG,QAA0B,YAAcV,QAAQU,UACjEC,OAAOD,QAAUH,IAEjBD,EAAKM,UAAYL,IANpB,MAQEM,EAAW,WA8CZ,OA7CA,SAAgBC,GA0Cd,MAxCsB,GAAGC,MAAMC,KAAKC,SAASC,iBAAiB,mBAE9CC,QAAQ,SAAUC,GAChC,IAAIC,EAAUD,EAAeE,cAAc,0BACvCC,EAAcH,EAAeE,cAAc,UAC3CE,EAAcJ,EAAeE,cAAc,wBAG1CG,OAAOC,mBACVZ,EAAea,eAAeJ,GAIhCF,EAAQO,iBAAiB,QAAS,WAChCL,EAAYM,YAEZN,EAAYO,MAAMC,IAAM,cAAgBR,EAAYS,aAAe,EAAI,QAIzER,EAAYI,iBAAiB,QAAS,WACpCL,EAAYU,MAAM,YAIpBV,EAAYK,iBAAiB,SAAU,WACrCL,EAAYU,MAAM,eAOpBb,EAAeQ,iBAAiB,QAAS,SAAUM,GAC7CA,EAAGC,SAAWZ,GAChBA,EAAYU,MAAM,iBAKjBnB","file":"dcf-dialog.min.js","sourcesContent":["'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n;(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if ((typeof exports === 'undefined' ? 'undefined' : _typeof(exports)) === 'object') {\n    module.exports = factory();\n  } else {\n    root.dcfDialog = factory();\n  }\n})(undefined, function () {\n  function Dialog(dialogPolyfill) {\n    // select all modal and convert node list to array\n    var modalContainers = [].slice.call(document.querySelectorAll('.dcf-js-dialog'));\n\n    modalContainers.forEach(function (modalContainer) {\n      var trigger = modalContainer.querySelector('.dcf-js-dialog-trigger');\n      var modalDialog = modalContainer.querySelector('dialog');\n      var closeButton = modalContainer.querySelector('.dcf-o-dialog__close');\n\n      // if global dialog property not present, register all dialog modal with polyfill\n      if (!window.HTMLDialogElement) {\n        dialogPolyfill.registerDialog(modalDialog);\n      }\n\n      // show dialog on trigger button click\n      trigger.addEventListener('click', function () {\n        modalDialog.showModal();\n        // translate doesn't seem to work on dialog\n        modalDialog.style.top = 'calc(50% - ' + modalDialog.scrollHeight / 2 + 'px)';\n      });\n\n      // close dialog on close button click\n      closeButton.addEventListener('click', function () {\n        modalDialog.close('closed');\n      });\n\n      // close dialog on Esc button press\n      modalDialog.addEventListener('cancel', function () {\n        modalDialog.close('cancelled');\n      });\n\n      // close dialog when clicking on dialog backdrop\n      // for this to work properly, child elements of dialog must span the entire region\n      // within the dialog box so that when clicking within the dialog, child elements\n      // are clicked on instead of the dialog box itself\n      modalContainer.addEventListener('click', function (el) {\n        if (el.target === modalDialog) {\n          modalDialog.close('cancelled');\n        }\n      });\n    });\n\n    return dialogPolyfill;\n  }\n\n  return Dialog;\n});"]}