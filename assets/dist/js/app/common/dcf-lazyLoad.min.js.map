{"version":3,"sources":["common/dcf-lazyLoad.js"],"names":["_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","_typeof","Symbol","iterator","obj","constructor","_classCallCheck","instance","TypeError","root","factory","define","amd","exports","module","dcfLazyLoad","undefined","LazyLoad","itemList","observerConfig","classNames","_this","this","onIntersection","entries","observer","itemsCount","disconnect","entry","nodeName","intersectionRatio","thresholds","preloadImage","applyImage","unobserve","value","w","window","d","document","e","documentElement","g","getElementsByTagName","innerWidth","clientWidth","image","src","dataset","srcset","sizes","pxTOvw","parentElement","parentNode","applyPicture","classList","add","removeAttribute","forEach","className","arguments","Promise","resolve","reject","Image","onload","onerror","fetchImage","catch","err","mes","picture","pictureSources","items","preload","HTMLImageElement","loadItemsImmediately","IntersectionObserver","item","contains","observe"],"mappings":"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","file":"dcf-lazyLoad.min.js","sourcesContent":["'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n;(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if ((typeof exports === 'undefined' ? 'undefined' : _typeof(exports)) === 'object') {\n    module.exports = factory();\n  } else {\n    root.dcfLazyLoad = factory();\n  }\n})(undefined, function () {\n  var LazyLoad = function () {\n    /**\n     * class constructor\n     * @param {itemList} nodelist of selected lazy loadable nodes\n     * @param {observerConfig} object of intersectionObserver configuration\n     * @param {classNames} array of classes applied\n     */\n    function LazyLoad(itemList, observerConfig, classNames) {\n      var _this = this;\n\n      _classCallCheck(this, LazyLoad);\n\n      this.onIntersection = function (entries, observer) {\n\n        // Disconnect if we've already loaded all of the images\n        if (_this.itemsCount === 0) {\n          _this.observer.disconnect();\n        }\n\n        // Loop through the entries\n        for (var i = 0; i < entries.length; i++) {\n          var entry = entries[i];\n\n          switch (entry.target.nodeName) {\n            case 'IMG':\n              if (entry.intersectionRatio > observer.thresholds[0] && entry.intersectionRatio < observer.thresholds[1]) {\n                _this.preloadImage(entry.target);\n              } else if (entry.intersectionRatio > observer.thresholds[1]) {\n                _this.itemsCount--;\n                _this.applyImage(entry.target);\n                _this.observer.unobserve(entry.target);\n              }\n              break;\n\n            default:\n              // do nothing skip to next item;\n              continue;\n          }\n        }\n      };\n\n      this.itemList = itemList;\n      this.observerConfig = observerConfig;\n      this.classNames = classNames;\n    }\n\n    _createClass(LazyLoad, [{\n      key: 'pxTOvw',\n      value: function pxTOvw(value) {\n        var w = window,\n            d = document,\n            e = d.documentElement,\n            g = d.getElementsByTagName('body')[0],\n            x = w.innerWidth || e.clientWidth || g.clientWidth;\n\n        var result = 100 * value / x;\n        return result + 'vw';\n      }\n    }, {\n      key: 'applyImage',\n\n\n      /**\n       * Apply the image: preloaded image is loaded but not applied to actual image element\n       * @param {string} image: the image element that we are targetting\n       */\n      value: function applyImage(image) {\n        var src = image.dataset.src;\n        var srcset = image.dataset.srcset || null;\n        var sizes = image.dataset.sizes || this.pxTOvw(image.parentElement.clientWidth);\n\n        if (!src) {\n          return;\n        }\n\n        // Process parent picture lazy load if image is child of a picture\n        if (image.parentNode.nodeName == 'PICTURE') {\n          this.applyPicture(image.parentNode);\n        }\n\n        // Prevent this from being lazy loaded a second time.\n        image.classList.add('dcf-lazy-loaded');\n        src && (image.src = src);\n        src && image.removeAttribute('data-src');\n        srcset && (image.srcset = srcset);\n        srcset && image.removeAttribute('data-srcset');\n        sizes && (image.sizes = sizes);\n        sizes && image.removeAttribute('data-sizes');\n        this.classNames.length && this.classNames.forEach(function (className) {\n          return image.classList.add(className);\n        });\n      }\n    }, {\n      key: 'fetchImage',\n\n\n      /**\n       * Fetches the image for the given source\n       * @param {string} src\n       * @param {string} srcset, defaults to null if not provided\n       */\n      value: function fetchImage(src) {\n        var srcset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n        var sizes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n        return new Promise(function (resolve, reject) {\n          var image = new Image();\n          src && (image.src = src);\n          srcset && (image.srcset = srcset);\n          sizes && (image.sizes = sizes);\n\n          image.onload = resolve;\n          image.onerror = reject;\n        });\n      }\n\n      /**\n       * Preloads the image\n       * @param {object} image\n       */\n\n    }, {\n      key: 'preloadImage',\n      value: function preloadImage(image) {\n        var src = image.dataset.src;\n        var srcset = image.dataset.srcset;\n        var sizes = image.dataset.sizes || null;\n\n        if (!src) {\n          return;\n        }\n\n        return this.fetchImage(src, srcset, sizes).catch(function (err) {\n          return 'Image failed to fetch ' + err.mes;\n        });\n      }\n    }, {\n      key: 'applyPicture',\n\n\n      /**\n       * Apply the picture\n       * @param {string} picture: the picture element that we are targeting\n       */\n      value: function applyPicture(picture) {\n\n        // update picture source tags\n        var pictureSources = picture.getElementsByTagName(\"SOURCE\");\n        for (var i = 0; i < pictureSources.length; i++) {\n          var srcset = pictureSources[i].dataset.srcset || null;\n          var sizes = pictureSources[i].dataset.sizes || this.pxTOvw(picture.parentElement.clientWidth);\n\n          if (!srcset) {\n            continue;\n          }\n\n          srcset && (pictureSources[i].srcset = srcset);\n          srcset && pictureSources[i].removeAttribute('data-srcset');\n          sizes && (pictureSources[i].sizes = sizes);\n          sizes && pictureSources[i].removeAttribute('data-sizes');\n        }\n      }\n    }, {\n      key: 'loadItemsImmediately',\n\n\n      /**\n       * Load all of the items immediately\n       * @param {NodeListOf<Element>} items\n       * @param {boolean} preload\n       */\n      value: function loadItemsImmediately(items) {\n        var preload = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n        // foreach() is not supported in IE\n        for (var i = 0; i < items.length; i++) {\n          switch (items[i].nodeName) {\n            case 'IMG':\n              if (preload === true) {\n                this.preloadImage(items[i]);\n              }\n              this.applyImage(items[i]);\n              break;\n\n            default:\n              // do nothing skip to next item;\n              continue;\n          }\n        }\n      }\n\n      /**\n       * Disconnect the observer\n       */\n\n    }, {\n      key: 'disconnect',\n      value: function disconnect() {\n        if (!this.observer) {\n          return;\n        }\n\n        this.observer.disconnect();\n      }\n\n      /**\n       * On intersection\n       * @param {array} intersection entries\n       * @param {object} intersection observer\n       */\n\n    }, {\n      key: 'initialize',\n      value: function initialize() {\n\n        if (!this.itemList) return;\n\n        this.itemsCount = this.itemList.length;\n\n        if (\"loading\" in HTMLImageElement.prototype) {\n          // Native lazy loading IS supported, so set src-data to src\n          this.loadItemsImmediately(this.itemList, false);\n        } else {\n          // Native lazy loading NOT supported, so handle via javascript\n          // If browser doesn't support intersection observer, load the items immediately\n          if (!('IntersectionObserver' in window)) {\n            this.loadItemsImmediately(this.itemList);\n          } else {\n            // It is supported, load the items\n            this.observer = new IntersectionObserver(this.onIntersection, this.observerConfig);\n\n            // foreach() is not supported in IE\n            for (var i = 0; i < this.itemList.length; i++) {\n              var item = this.itemList[i];\n              if (item.classList.contains('dcf-lazy-loaded')) {\n                continue;\n              }\n\n              this.observer.observe(item);\n            }\n          }\n        }\n      }\n    }]);\n\n    return LazyLoad;\n  }();\n\n  return LazyLoad;\n});"]}