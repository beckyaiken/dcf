{"version":3,"sources":["common/dcf-lazyLoad.js"],"names":["_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","_typeof","Symbol","iterator","obj","constructor","_classCallCheck","instance","TypeError","root","factory","define","amd","exports","module","dcfLazyLoad","undefined","LazyLoad","imagesList","observerConfig","classNames","_this","this","onIntersection","entries","imageCount","observer","disconnect","entry","intersectionRatio","unobserve","preloadImage","value","img","src","srcset","arguments","classList","add","removeAttribute","forEach","className","_arguments","Promise","resolve","reject","image","Image","onload","onerror","_this2","dataset","fetchImage","then","applyImage","catch","err","mes","images","window","IntersectionObserver","contains","observe","loadImagesImmediately"],"mappings":"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","file":"dcf-lazyLoad.min.js","sourcesContent":["'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n;(function (root, factory) {\n\tif (typeof define === 'function' && define.amd) {\n\t\tdefine([], factory);\n\t} else if ((typeof exports === 'undefined' ? 'undefined' : _typeof(exports)) === 'object') {\n\t\tmodule.exports = factory();\n\t} else {\n\t\troot.dcfLazyLoad = factory();\n\t}\n})(undefined, function () {\n\tvar LazyLoad = function () {\n\t\t/**\n   * Apply the image\n   * @param {imagesList} nodelist of selected images\n   * @param {observerConfig} object of intersectionObserver configuration\n   * @param {classNames} array of classes applied\n   */\n\t\tfunction LazyLoad(imagesList, observerConfig, classNames) {\n\t\t\tvar _this = this;\n\n\t\t\t_classCallCheck(this, LazyLoad);\n\n\t\t\tthis.onIntersection = function (entries) {\n\t\t\t\t// Disconnect if we've already loaded all of the images\n\t\t\t\tif (_this.imageCount === 0) {\n\t\t\t\t\t_this.observer.disconnect();\n\t\t\t\t}\n\n\t\t\t\t// Loop through the entries\n\t\t\t\tfor (var i = 0; i < entries.length; i++) {\n\t\t\t\t\tvar entry = entries[i];\n\t\t\t\t\t// Are we in viewport?\n\t\t\t\t\tif (entry.intersectionRatio > 0) {\n\t\t\t\t\t\t_this.imageCount--;\n\n\t\t\t\t\t\t// Stop watching and load the image\n\t\t\t\t\t\t_this.observer.unobserve(entry.target);\n\t\t\t\t\t\t_this.preloadImage(entry.target);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.imagesList = imagesList;\n\t\t\tthis.observerConfig = observerConfig;\n\t\t\tthis.classNames = classNames; // add onEnter, onEnterActive?\n\t\t}\n\n\t\t/**\n   * Apply the image\n   * @param {object} img\n   * @param {string} src\n   */\n\n\n\t\t_createClass(LazyLoad, [{\n\t\t\tkey: 'applyImage',\n\t\t\tvalue: function applyImage(img, src) {\n\t\t\t\tvar srcset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n\t\t\t\t// Prevent this from being lazy loaded a second time.\n\t\t\t\timg.classList.add('dcf-lazy-img-loaded');\n\t\t\t\timg.src = src;\n\t\t\t\tsrc && img.removeAttribute('data-src');\n\t\t\t\tsrcset && (img.srcset = srcset);\n\t\t\t\tsrcset && img.removeAttribute('data-srcset');\n\t\t\t\tthis.classNames.length && this.classNames.forEach(function (className) {\n\t\t\t\t\treturn img.classList.add(className);\n\t\t\t\t});\n\t\t\t\t// img.classList.add('dcf-fade-up');\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'fetchImage',\n\n\n\t\t\t/**\n    * Fetches the image for the given URL\n    * @param {string} url\n    */\n\t\t\tvalue: function fetchImage() {\n\t\t\t\tvar _arguments = arguments;\n\n\t\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\t\tvar image = new Image();\n\t\t\t\t\t// image.src = url;\n\t\t\t\t\t_arguments[0] && (image.src = _arguments[0]);\n\t\t\t\t\t_arguments[1] && (image.srcset = _arguments[1]);\n\n\t\t\t\t\timage.onload = resolve;\n\t\t\t\t\timage.onerror = reject;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t/**\n    * Preloads the image\n    * @param {object} image\n    */\n\n\t\t}, {\n\t\t\tkey: 'preloadImage',\n\t\t\tvalue: function preloadImage(image) {\n\t\t\t\tvar _this2 = this;\n\n\t\t\t\tvar src = image.dataset.src;\n\t\t\t\tvar srcset = image.dataset.srcset;\n\n\t\t\t\tif (!src) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\treturn this.fetchImage(src, srcset).then(function () {\n\t\t\t\t\t_this2.applyImage(image, src, srcset);\n\t\t\t\t}).catch(function (err) {\n\t\t\t\t\treturn 'Image failed to fetch ' + err.mes;\n\t\t\t\t});\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'loadImagesImmediately',\n\n\n\t\t\t/**\n    * Load all of the images immediately\n    * @param {NodeListOf<Element>} images\n    */\n\t\t\tvalue: function loadImagesImmediately(images) {\n\t\t\t\t// foreach() is not supported in IE\n\t\t\t\tfor (var i = 0; i < images.length; i++) {\n\t\t\t\t\tvar image = images[i];\n\t\t\t\t\tthis.preloadImage(image);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/**\n    * Disconnect the observer\n    */\n\n\t\t}, {\n\t\t\tkey: 'disconnect',\n\t\t\tvalue: function disconnect() {\n\t\t\t\tif (!this.observer) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.observer.disconnect();\n\t\t\t}\n\n\t\t\t/**\n    * On intersection\n    * @param {array} entries\n    */\n\n\t\t}, {\n\t\t\tkey: 'initialize',\n\t\t\tvalue: function initialize() {\n\t\t\t\tif (!this.imagesList) return;\n\t\t\t\tthis.imageCount = this.imagesList.length;\n\n\t\t\t\t// If we don't have support for intersection observer, loads the images immediately\n\t\t\t\tif (!('IntersectionObserver' in window)) {\n\t\t\t\t\tthis.loadImagesImmediately(this.imagesList);\n\t\t\t\t} else {\n\t\t\t\t\t// It is supported, load the images\n\t\t\t\t\tthis.observer = new IntersectionObserver(this.onIntersection, this.observerConfig);\n\n\t\t\t\t\t// foreach() is not supported in IE\n\t\t\t\t\tfor (var i = 0; i < this.imageCount; i++) {\n\t\t\t\t\t\tvar image = this.imagesList[i];\n\t\t\t\t\t\tif (image.classList.contains('dcf-lazy-img-loaded')) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.observer.observe(image);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}]);\n\n\t\treturn LazyLoad;\n\t}();\n\n\treturn LazyLoad;\n});"]}