{"version":3,"sources":["node_modules/browser-pack/_prelude.js","assets/dist/js/app/preBabel/common/dcf-lazyLoad.js","assets/dist/js/app/preBabel/common/dcf-modal.js","assets/dist/js/app/preBabel/common/dcf-uuidGen.js","example/js/src/main-body.js","node_modules/body-scroll-lock/lib/bodyScrollLock.min.js"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",";(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.dcfLazyLoad = factory();\n  }\n}(this, function() {\nclass LazyLoad {\n  /**\n   * class constructor\n   * @param {itemList} nodelist of selected images and pictures\n   * @param {observerConfig} object of intersectionObserver configuration\n   * @param {classNames} array of classes applied\n   */\n  constructor(itemList, observerConfig, classNames) {\n    this.itemList = itemList;\n    this.observerConfig = observerConfig;\n    this.classNames = classNames;\n  }\n\n  pxTOvw(value) {\n    var w = window,\n      d = document,\n      e = d.documentElement,\n      g = d.getElementsByTagName('body')[0],\n      x = w.innerWidth || e.clientWidth || g.clientWidth;\n\n    var result = (100*value)/x;\n    return result + 'vw';\n  };\n\n  /**\n   * Apply the image: preloaded image is loaded but not applied to actual image element\n   * @param {string} image: the image element that we are targetting\n   */\n  applyImage(image) {\n    const src = image.dataset.src;\n    const srcset = image.dataset.srcset || null;\n    const sizes = image.dataset.sizes || this.pxTOvw(image.parentElement.clientWidth);\n\n    if (!src) {\n      return;\n    }\n\n    // Process parent picture lazy load if image is child of a picture\n    if (image.parentNode.nodeName == 'PICTURE') {\n      this.applyPicture(image.parentNode);\n    }\n\n    // Prevent this from being lazy loaded a second time.\n    image.classList.add('dcf-lazy-loaded');\n    src && (image.src = src);\n    src && (image.removeAttribute('data-src'));\n    srcset && (image.srcset = srcset);\n    srcset && (image.removeAttribute('data-srcset'));\n    sizes && (image.sizes = sizes);\n    sizes && (image.removeAttribute('data-sizes'));\n    this.classNames.length && this.classNames.forEach(className => image.classList.add(className));\n  };\n\n  /**\n   * Fetches the image for the given source\n   * @param {string} src\n   * @param {string} srcset, defaults to null if not provided\n   */\n  fetchImage(src, srcset = null, sizes = null) {\n    return new Promise((resolve, reject) => {\n      const image = new Image();\n      src && (image.src = src);\n      srcset && (image.srcset = srcset);\n      sizes && (image.sizes = sizes);\n\n      image.onload = resolve;\n      image.onerror = reject;\n    });\n  }\n\n  /**\n   * Preloads the image\n   * @param {object} image\n   */\n  preloadImage(image) {\n    const src = image.dataset.src;\n    const srcset = image.dataset.srcset;\n    const sizes = image.dataset.sizes || null;\n\n    if (!src) {\n      return;\n    }\n\n    return this.fetchImage(src, srcset, sizes).catch(err => `Image failed to fetch ${err.mes}`);\n  };\n\n  /**\n   * Apply the picture\n   * @param {string} picture: the picture element that we are targeting\n   */\n  applyPicture(picture) {\n\n    // update picture source tags\n    let pictureSources = picture.getElementsByTagName(\"SOURCE\");\n    for (let i = 0; i < pictureSources.length; i++) {\n      const srcset = pictureSources[i].dataset.srcset || null;\n      const sizes = pictureSources[i].dataset.sizes || this.pxTOvw(picture.parentElement.clientWidth);\n\n      if (!srcset) {\n        continue;\n      }\n\n      srcset && (pictureSources[i].srcset = srcset);\n      srcset && (pictureSources[i].removeAttribute('data-srcset'));\n      sizes && (pictureSources[i].sizes = sizes);\n      sizes && (pictureSources[i].removeAttribute('data-sizes'));\n    }\n  };\n\n  /**\n   * Load all of the items immediately\n   * @param {NodeListOf<Element>} items\n   * @param {boolean} preload\n   */\n  loadItemsImmediately(items, preload = true) {\n    // foreach() is not supported in IE\n    for (let i = 0; i < items.length; i++) {\n      switch(items[i].nodeName) {\n        case 'IMG':\n          if (preload === true) {\n            this.preloadImage(items[i]);\n          }\n          this.applyImage(items[i]);\n          break;\n\n        default:\n          // do nothing skip to next item;\n          continue;\n      }\n    }\n  }\n\n  /**\n   * Disconnect the observer\n   */\n  disconnect() {\n    if (!this.observer) {\n      return;\n    }\n\n    this.observer.disconnect();\n  };\n\n  /**\n   * On intersection\n   * @param {array} intersection entries\n   * @param {object} intersection observer\n   */\n  onIntersection = (entries, observer) => {\n\n    // Disconnect if we've already loaded all of the images\n    if (this.itemsCount === 0) {\n      this.observer.disconnect();\n    }\n\n    // Loop through the entries\n    for (let i = 0; i < entries.length; i++) {\n      let entry = entries[i];\n\n      if (entry.target.nodeName == 'IMG') {\n        if (entry.intersectionRatio > observer.thresholds[0] && entry.intersectionRatio < observer.thresholds[1]) {\n          this.preloadImage(entry.target);\n        } else if (entry.intersectionRatio > observer.thresholds[1]) {\n          this.itemsCount--;\n          this.applyImage(entry.target);\n          this.observer.unobserve(entry.target);\n        }\n      }\n    }\n  };\n\n  initialize() {\n\n    if(!this.itemList) return;\n\n    this.itemsCount = this.itemList.length;\n\n    if (\"loading\" in HTMLImageElement.prototype) {\n      // Native lazy loading IS supported, so set src-data to src\n      this.loadItemsImmediately(this.itemList, false);\n    } else {\n      // Native lazy loading NOT supported, so handle via javascript\n      // If browser doesn't support intersection observer, load the items immediately\n      if (!('IntersectionObserver' in window)) {\n        this.loadItemsImmediately(this.itemList);\n      } else {\n        // It is supported, load the items\n        this.observer = new IntersectionObserver(this.onIntersection, this.observerConfig);\n\n        // foreach() is not supported in IE\n        for (let i = 0; i < this.itemList.length; i++) {\n          let item = this.itemList[i];\n          if (item.classList.contains('dcf-lazy-loaded')) {\n            continue;\n          }\n\n          this.observer.observe(item);\n        }\n      }\n    }\n  }\n}\n\nreturn LazyLoad;\n}));\n",";(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(['./dcf-uuidGen'], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory(require('./dcf-uuidGen'));\n  } else {\n    root.dcfModal = factory(root.dcfHelperUuidv4);\n  }\n}(this, function(uuidv4) {\nclass Modal {\n  /**\n   * class constructor\n   * @param {modals} modals of selected modals\n   */\n  constructor(modals, bodyScrollLock) {\n    this.modals = modals;\n    this.disableBodyScroll = null;\n    this.enableBodyScroll = null;\n    if (bodyScrollLock && bodyScrollLock.disableBodyScroll && bodyScrollLock.enableBodyScroll) {\n      this.disableBodyScroll = bodyScrollLock.disableBodyScroll;\n      this.enableBodyScroll = bodyScrollLock.enableBodyScroll;\n    }\n  }\n\n  /**\n   * Prepend modals to body so that elements outside of modal can be made inert\n   * @param {string} el: the element that we are targetting\n   */\n  appendToBody(el) {\n    const body = document.querySelector('body');\n    body.appendChild(el);\n  }\n\n  // Toggle modal\n  toggleModal(modalId, btnId) {\n    const thisModal = document.getElementById(modalId);\n    let modalOpen = thisModal.getAttribute('aria-hidden') === 'false' ? true : false;\n\n    if (modalOpen) {\n      // modal open so close it\n      this.closeModal(modalId);\n    } else {\n      // modal closed so open it\n      this.openModal(modalId, btnId);\n    }\n  }\n\n  // Set nav toggle button state as open or closed\n  // Note: Assumes nav toggle buttons are svgs with expected markup\n  setNavToggleBtnState(btn, btnState) {\n    btnState = typeof btnState !== 'undefined' ? btnState : 'open';\n    const btnSVGs = btn.getElementsByTagName('svg');\n    const btnLabels = btn.getElementsByClassName('dcf-nav-toggle-label');\n\n    // Set SVG state\n    if (btnSVGs.length) {\n      const gTags = btnSVGs[0].getElementsByTagName('g');\n      for (let i = 0; i < gTags.length; i++) {\n        if (gTags[i].classList.contains('dcf-nav-toggle-icon-open')) {\n          if (btnState.toLowerCase() == 'open') {\n            gTags[i].classList.remove('dcf-d-none');\n          } else {\n            gTags[i].classList.add('dcf-d-none');\n          }\n        } else if (gTags[i].classList.contains('dcf-nav-toggle-icon-close')) {\n          if (btnState.toLowerCase() == 'open') {\n            gTags[i].classList.add('dcf-d-none');\n          } else {\n            gTags[i].classList.remove('dcf-d-none');\n          }\n        }\n      }\n    }\n\n    // Set Button Label\n    if (btnLabels.length) {\n      if (btnState.toLowerCase() == 'open') {\n        btnLabels[0].textContent = btn.getAttribute('data-nav-toggle-label-open') ? btn.getAttribute('data-nav-toggle-label-open') : 'Open';\n      } else {\n        btnLabels[0].textContent = btn.getAttribute('data-nav-toggle-label-closed') ? btn.getAttribute('data-nav-toggle-label-closed') : 'Close';\n      }\n    }\n\n  }\n\n  // Open modal\n  openModal(modalId, openBtnId) {\n    const body = document.querySelector('body');\n    const skipNav = document.getElementById('dcf-skip-nav');\n    const header = document.getElementById('dcf-header');\n    const main = document.getElementById('dcf-main');\n    const footer = document.getElementById('dcf-footer');\n    const navToggleGroup = document.getElementById('dcf-nav-toggle-group');\n    const navToggleGroupParent = navToggleGroup && navToggleGroup.parentElement ? navToggleGroup.parentElement : null;\n    const nonModals = [ skipNav, header, main, footer ];\n\n    for (let m = 0; m < this.modals.length; m++) {\n      const modal = this.modals[m];\n      if (modal.getAttribute('id') !== modalId) {\n        this.closeModal(modal.getAttribute('id'));\n      }\n    }\n\n    const thisModal = document.getElementById(modalId);\n    let modalOpen = thisModal.getAttribute('aria-hidden') === 'false' ? true : false;\n\n    let modalWithNavToggleGroup = false;\n    if (openBtnId) {\n      this.currentBtn = openBtnId;\n      const openBtn = document.getElementById(openBtnId);\n      modalWithNavToggleGroup = openBtn && openBtn.getAttribute('data-with-nav-toggle-group') === 'true';\n      if (modalWithNavToggleGroup) {\n        this.setNavToggleBtnState(openBtn, 'closed');\n      }\n    }\n\n    this.currentModal = modalId;\n\n    // Don't open modal if it's already open\n    if (modalOpen) {\n      return;\n    }\n\n    // Set elements outside of modal to be inert and hidden from screen readers\n    for (let i = 0; i < nonModals.length; i++) {\n      if (modalWithNavToggleGroup && navToggleGroup && nonModals[i] === navToggleGroupParent) {\n        nonModals[i].setAttribute('aria-hidden','false');\n\n        // hide all children of navToggleGroupParent except navToggleGroup\n        const children = navToggleGroupParent.childNodes;\n        for (let j = 0; j < children.length; j++) {\n          if (children[j].nodeType === Node.ELEMENT_NODE) {\n            if (children[j] === navToggleGroup) {\n              children[j].setAttribute('aria-hidden', 'false');\n            } else {\n              children[j].setAttribute('aria-hidden', 'true');\n            }\n          }\n        }\n      } else {\n        nonModals[i].setAttribute('aria-hidden','true');\n      }\n    }\n\n    // Prevent body from scrolling\n    if (this.disableBodyScroll) {\n      this.disableBodyScroll(thisModal);\n    }\n\n    // Add `.dcf-modal-is-open` helper class to body\n    body.classList.add('dcf-modal-is-open');\n\n    // Set attribute for this modal\n    thisModal.setAttribute('aria-hidden', 'false');\n\n    // Add/remove classes to this modal\n    thisModal.classList.remove('dcf-opacity-0', 'dcf-pointer-events-none', 'dcf-invisible');\n    thisModal.classList.add('dcf-opacity-100', 'dcf-pointer-events-auto');\n\n    // Apply modal with toggle group class if requested\n    if (modalWithNavToggleGroup) {\n      thisModal.classList.add('dcf-z-modal-with-nav-toggle-group');\n    }\n    const keycodeTab = 9;\n    const tabFocusEls = thisModal.querySelectorAll('button:not([hidden]):not([disabled]), ' +\n      '[href]:not([hidden]), input:not([hidden]):not([type=\"hidden\"]):not([disabled]), ' +\n      'select:not([hidden]):not([disabled]), textarea:not([hidden]):not([disabled]), ' +\n      '[tabindex=\"0\"]:not([hidden]):not([disabled]), summary:not([hidden]), ' +\n      '[contenteditable]:not([hidden]), audio[controls]:not([hidden]), ' +\n      'video[controls]:not([hidden])');\n    let firstTabFocusEl = tabFocusEls[0];\n    let lastTabFocusEl = tabFocusEls[tabFocusEls.length - 1];\n\n    // Send focus to the modal\n    thisModal.focus();\n\n    // Trap focus inside the modal content\n    thisModal.addEventListener('keydown', function(e) {\n\n      let isTabPressed = e.key === 'Tab' || e.keyCode === keycodeTab;\n\n      if (!isTabPressed) {\n        return;\n      }\n\n      if (e.key === 'Tab' || e.keyCode === keycodeTab) {\n        if ( e.shiftKey ) { // Tab backwards (shift + tab)\n          if (document.activeElement === firstTabFocusEl) {\n            e.preventDefault();\n            lastTabFocusEl.focus();\n          }\n        } else { // Tab forwards\n          if (document.activeElement === lastTabFocusEl) {\n            e.preventDefault();\n            firstTabFocusEl.focus();\n          }\n        }\n      }\n    });\n\n    // Trigger open modal event for this modal to allow event listeners to handle\n    const eventName = 'ModalOpenEvent_' + modalId;\n    document.dispatchEvent(new CustomEvent(eventName));\n  }\n\n  // Close modal\n  closeModal(modalId) {\n\n    const body = document.querySelector('body');\n    const skipNav = document.getElementById('dcf-skip-nav');\n    const header = document.getElementById('dcf-header');\n    const main = document.getElementById('dcf-main');\n    const footer = document.getElementById('dcf-footer');\n    const navToggleGroup = document.getElementById('dcf-nav-toggle-group');\n    const navToggleGroupParent = navToggleGroup && navToggleGroup.parentElement ? navToggleGroup.parentElement: null;\n    const nonModals = [ skipNav, header, main, footer ];\n    const thisModal = document.getElementById(modalId);\n    let modalClosed = thisModal.getAttribute('aria-hidden') === 'true' ? true : false;\n    this.currentModal = null;\n\n    // Don't close modal if it's already closed\n    if (modalClosed) {\n      return;\n    }\n\n    // Remove `.dcf-modal-is-open` helper class from body\n    body.classList.remove('dcf-modal-is-open');\n\n    if (this.currentBtn) {\n      const closeBtn = document.getElementById(this.currentBtn);\n      if (closeBtn && closeBtn.getAttribute('data-with-nav-toggle-group') === 'true') {\n        this.setNavToggleBtnState(closeBtn, 'open');\n      }\n    }\n\n    // Restore visibility and functionality to elements outside of modal\n    for (let i = 0; i < nonModals.length; i++) {\n      if (navToggleGroup && nonModals[i] === navToggleGroupParent) {\n        // show all children of navToggleGroupParent\n        const children = navToggleGroupParent.childNodes;\n        for (let j = 0; j < children.length; j++) {\n          if (children[j].nodeType === Node.ELEMENT_NODE) {\n            children[j].setAttribute('aria-hidden', 'false');\n          }\n        }\n      }\n\n      // show all nonModals\n      nonModals[i].setAttribute('aria-hidden','false');\n    }\n\n    // Set attribute for this modal\n    thisModal.setAttribute('aria-hidden', 'true');\n\n    // Add/remove classes to this modal\n    thisModal.classList.remove('dcf-opacity-100', 'dcf-pointer-events-auto', 'z-modal-with-nav-toggle-group');\n    thisModal.classList.add('dcf-opacity-0', 'dcf-pointer-events-none');\n\n    // Modal transition\n    function modalTransition() {\n\n    \t// Remove event listener after the modal transition\n      thisModal.removeEventListener('transitionend', modalTransition);\n\n      // Add the `.dcf-invisible` class to this modal after the transition\n      if (!thisModal.classList.contains('dcf-invisible')) {\n        thisModal.classList.add('dcf-invisible');\n      }\n    }\n\n    // Add event listener for the end of the modal transition\n    thisModal.addEventListener('transitionend', modalTransition);\n\n    // Send focus back to button that opened modal\n    if (this.currentBtn) {\n      document.getElementById(this.currentBtn).focus();\n    }\n\n    // Allow body to scroll\n    if (this.enableBodyScroll) {\n      this.enableBodyScroll(thisModal);\n    }\n\n    // Trigger close modal event for this modal to allow event listeners to handle\n    const eventName = 'ModalCloseEvent_' + modalId;\n    document.dispatchEvent(new CustomEvent(eventName));\n  }\n\n  btnToggleListen(btnToggleModal, modalId, btnId) {\n    let modalInstance = this;\n\n    // Listen for when 'open modal' button is pressed\n    btnToggleModal.addEventListener('click', function () {\n      // Toggle modal when button is pressed\n      modalInstance.toggleModal(modalId, btnId);\n    }, false);\n  }\n\n  btnCloseListen(btnCloseModal, modal) {\n    let modalInstance = this;\n\n    // Listen for when 'close modal' button is pressed\n    btnCloseModal.addEventListener('click', function () {\n\n      // Open modal when button is pressed\n      modalInstance.closeModal(modal.getAttribute('id'));\n    }, false);\n  }\n\n  overlayListen(modal, modalWrapper) {\n    let modalInstance = this;\n\n    // Listen for clicks on the open modal\n    modal.addEventListener('click', function (event) {\n\n      // If the click is in modal wrapper, leave the modal open\n      if (modalWrapper.contains(event.target)) {\n        return;\n      }\n\n      // If the click is outside the modal wrapper (on the modal overlay), close the modal\n      modalInstance.closeModal(modal.getAttribute('id'));\n    });\n  }\n\n  escListen() {\n    let modalInstance = this;\n\n    // Listen for when 'esc' key is pressed\n    document.addEventListener('keydown', function (event) {\n\n      // Close the currently open modal when 'esc' key is pressed\n      if (event.which === 27 && modalInstance.currentModal) {\n        event.preventDefault();\n        modalInstance.closeModal(modalInstance.currentModal);\n      }\n    });\n\n  }\n\n  generateUUID() {\n    let d = new Date().getTime();\n    let d2 = (performance && performance.now && (performance.now()*1000)) || 0;\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n      let r = Math.random() * 16;\n      if(d > 0){\n        r = (d + r)%16 | 0;\n        d = Math.floor(d/16);\n      } else {\n        r = (d2 + r)%16 | 0;\n        d2 = Math.floor(d2/16);\n      }\n      return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n    });\n  }\n\n  initialize() {\n    if(!this.modals) {\n      return;\n    }\n\n    // Define constants used in modal component\n    const body = document.querySelector('body');\n    const btnsToggleModal = document.querySelectorAll('.dcf-btn-toggle-modal');\n    const btnsCloseModal = document.querySelectorAll('.dcf-btn-close-modal');\n    const modalsWrapper = document.querySelectorAll('.dcf-modal-wrapper');\n    const modalsContent = document.querySelectorAll('.dcf-modal-content');\n    const modalsHeader = document.querySelectorAll('.dcf-modal-header');\n\n    let currentBtn = null;\n    let currentModal = null;\n\n    // Loop through all buttons that open modals\n    for (let i = 0; i < btnsToggleModal.length; i++) {\n      const btnToggleModal = btnsToggleModal[i];\n      const modalId = btnToggleModal.getAttribute('data-toggles-modal');\n\n      // Generate unique ID for each 'open modal' button\n      const btnId = this.generateUUID();\n      btnToggleModal.setAttribute('id', btnId);\n\n      // Buttons are disabled by default until JavaScript has loaded.\n      // Remove the 'disabled' attribute to make them functional.\n      btnToggleModal.removeAttribute('disabled');\n      this.btnToggleListen(btnToggleModal, modalId, btnId);\n    }\n\n    // Loop through all modals\n    for (let i = 0; i < this.modals.length; i++) {\n      const modal = this.modals[i];\n      const modalWrapper = modalsWrapper[i];\n      const modalContent = modalsContent[i];\n      const modalHeader = modalsHeader[i];\n      const btnCloseModal = btnsCloseModal[i];\n      const modalId = modal.id;\n      const modalHeadingId = modalId + '-heading';\n\n      // Get all headings in each modal header\n      const modalHeadings = modalHeader.querySelectorAll('h1, h2, h3, h4, h5, h6');\n\n      // Set ID on the first heading of each modal\n      modalHeadings[0].id = modalHeadingId;\n\n      // Append modals to body so that elements outside of modal can be hidden when modal is open\n      this.appendToBody(modal);\n\n      // Modals are hidden by default until JavaScript has loaded.\n      // Remove `hidden` attribute, then later replace with `.dcf-invisible` to allow for modal transitions.\n      modal.removeAttribute('hidden');\n\n      // Set attributes for each modal\n      modal.setAttribute('aria-labelledby', modalHeadingId);\n      modal.setAttribute('aria-hidden', 'true');\n      modal.setAttribute('role', 'dialog');\n      modal.setAttribute('tabindex', '-1');\n\n      // Check modal for any additional classes\n      if (modal.classList.length === 1 && modal.classList.contains('dcf-modal')) {\n        // If no custom classes are present, add default background utility class to modal\n        modal.classList.add('dcf-bg-overlay-dark');\n      }\n\n      // Add default utility classes to each modal\n      modal.classList.add('dcf-fixed', 'dcf-pin-top', 'dcf-pin-left', 'dcf-h-100%', 'dcf-w-100%', 'dcf-d-flex', 'dcf-ai-center', 'dcf-jc-center', 'dcf-opacity-0', 'dcf-pointer-events-none', 'dcf-invisible');\n\n      // Set attribute for modal wrapper\n      modalWrapper.setAttribute('role', 'document');\n\n      // Check modal wrapper for any additional classes\n      if (modalWrapper.classList.length === 1 && modalWrapper.classList.contains('dcf-modal-wrapper')) {\n        // If no custom classes are present, add default utility classes to modal wrapper\n        modalWrapper.classList.add('dcf-relative', 'dcf-h-auto', 'dcf-overflow-y-auto');\n      }\n\n      // Check modal header for any additional classes\n      if (modalHeader.classList.length === 1 && modalHeader.classList.contains('dcf-modal-header')) {\n        // If no custom classes are present, add default utility classes to modal header\n        modalHeader.classList.add('dcf-wrapper', 'dcf-pt-8', 'dcf-sticky', 'dcf-pin-top');\n      }\n\n      // Check each 'close' button for any additional classes\n      if (btnCloseModal.classList.length === 1 && btnCloseModal.classList.contains('dcf-btn-close-modal')) {\n        // If no custom classes are present, add default utility classes to 'close' button\n        btnCloseModal.classList.add('dcf-btn', 'dcf-btn-tertiary', 'dcf-absolute', 'dcf-pin-top', 'dcf-pin-right', 'dcf-z-1');\n      }\n\n      // Check modal content for any additional classes\n      if (modalContent.classList.length === 1 && modalContent.classList.contains('dcf-modal-content')) {\n        // If no custom classes are present, add default utility classes to modal content\n        modalContent.classList.add('dcf-wrapper', 'dcf-pb-8');\n      }\n\n      // Set attributes for each 'close' button\n      btnCloseModal.setAttribute('type', 'button');\n      btnCloseModal.setAttribute('aria-label', 'Close');\n\n      this.escListen();\n      this.overlayListen(modal, modalWrapper);\n      this.btnCloseListen(btnCloseModal, modal);\n\n    }\n  }\n}\n\nreturn Modal;\n}));\n",";(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.dcfHelperUuidv4 = factory();\n  }\n}(this, function() {\nfunction uuidv4() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = Math.random() * 16 | 0,\n        v = c === 'x' ? r : r & 0x3 | 0x8;\n    return v.toString(16);\n  });\n}\n\nreturn uuidv4;\n}));\n","// Lazy Load\nlet LazyLoad = require('dcf-lazyLoad');\nconst images = document.querySelectorAll('[loading=lazy], .dcf-lazy-load');\nconst observerConfig = {\n\t// extend intersection root margin by 50px to start intersection earlier by 50px\n\trootMargin: '0px 0px 50px 0px',\n\tthreshold: [0, 0.40]\n};\nconst enterClassNames = ['dcf-fade-in'];\nconst exampleLazyLoad = new LazyLoad(images, observerConfig, enterClassNames);\nexampleLazyLoad.initialize();\n\n\n// Modal\nlet Modal = require('dcf-modal');\nconst modals = document.querySelectorAll('.dcf-modal');\nconst bodyScrollLock = require('body-scroll-lock');\nconst exampleModal = new Modal(modals, bodyScrollLock);\nexampleModal.initialize();\n\n\n// Notice\n// let Notice = require('dcf-notice');\n// const noticeOptions = {\n// \twidget: 'notice',\n// \t'notice-type': 'alert',\n// \tanimation: 'true',\n// \tlocation: 'fixedBottom',\n// \tcollapsible: 'true',\n// \tid: 'dynamicNotice1'\n// };\n//\n// Notice.create('Spaghetti Monster Lives', 'You know no spaghetti', noticeOptions);\n\n\n// Date Picker\n// let flatpickr = require('flatpickr/flatpickr');\n// require(\"flatpickr/flatpickr.css\");\n// let datepicker = document.querySelector('[data-widget*=\"flatpickr\"]');\n// flatpickr(datepicker, {\n// \tenableTime: true,\n// \tdateFormat: \"Y-m-d h:iK\",\n// });\n","!function(e,t){if(\"function\"==typeof define&&define.amd)define([\"exports\"],t);else if(\"undefined\"!=typeof exports)t(exports);else{var o={};t(o),e.bodyScrollLock=o}}(this,function(exports){\"use strict\";function r(e){if(Array.isArray(e)){for(var t=0,o=Array(e.length);t<e.length;t++)o[t]=e[t];return o}return Array.from(e)}Object.defineProperty(exports,\"__esModule\",{value:!0});var l=!1;if(\"undefined\"!=typeof window){var e={get passive(){l=!0}};window.addEventListener(\"testPassive\",null,e),window.removeEventListener(\"testPassive\",null,e)}var d=\"undefined\"!=typeof window&&window.navigator&&window.navigator.platform&&/iP(ad|hone|od)/.test(window.navigator.platform),c=[],u=!1,a=-1,s=void 0,v=void 0,f=function(t){return c.some(function(e){return!(!e.options.allowTouchMove||!e.options.allowTouchMove(t))})},m=function(e){var t=e||window.event;return!!f(t.target)||(1<t.touches.length||(t.preventDefault&&t.preventDefault(),!1))},o=function(){setTimeout(function(){void 0!==v&&(document.body.style.paddingRight=v,v=void 0),void 0!==s&&(document.body.style.overflow=s,s=void 0)})};exports.disableBodyScroll=function(i,e){if(d){if(!i)return void console.error(\"disableBodyScroll unsuccessful - targetElement must be provided when calling disableBodyScroll on IOS devices.\");if(i&&!c.some(function(e){return e.targetElement===i})){var t={targetElement:i,options:e||{}};c=[].concat(r(c),[t]),i.ontouchstart=function(e){1===e.targetTouches.length&&(a=e.targetTouches[0].clientY)},i.ontouchmove=function(e){var t,o,n,r;1===e.targetTouches.length&&(o=i,r=(t=e).targetTouches[0].clientY-a,!f(t.target)&&(o&&0===o.scrollTop&&0<r?m(t):(n=o)&&n.scrollHeight-n.scrollTop<=n.clientHeight&&r<0?m(t):t.stopPropagation()))},u||(document.addEventListener(\"touchmove\",m,l?{passive:!1}:void 0),u=!0)}}else{n=e,setTimeout(function(){if(void 0===v){var e=!!n&&!0===n.reserveScrollBarGap,t=window.innerWidth-document.documentElement.clientWidth;e&&0<t&&(v=document.body.style.paddingRight,document.body.style.paddingRight=t+\"px\")}void 0===s&&(s=document.body.style.overflow,document.body.style.overflow=\"hidden\")});var o={targetElement:i,options:e||{}};c=[].concat(r(c),[o])}var n},exports.clearAllBodyScrollLocks=function(){d?(c.forEach(function(e){e.targetElement.ontouchstart=null,e.targetElement.ontouchmove=null}),u&&(document.removeEventListener(\"touchmove\",m,l?{passive:!1}:void 0),u=!1),c=[],a=-1):(o(),c=[])},exports.enableBodyScroll=function(t){if(d){if(!t)return void console.error(\"enableBodyScroll unsuccessful - targetElement must be provided when calling enableBodyScroll on IOS devices.\");t.ontouchstart=null,t.ontouchmove=null,c=c.filter(function(e){return e.targetElement!==t}),u&&0===c.length&&(document.removeEventListener(\"touchmove\",m,l?{passive:!1}:void 0),u=!1)}else(c=c.filter(function(e){return e.targetElement!==t})).length||o()}});\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJhc3NldHMvZGlzdC9qcy9hcHAvcHJlQmFiZWwvY29tbW9uL2RjZi1sYXp5TG9hZC5qcyIsImFzc2V0cy9kaXN0L2pzL2FwcC9wcmVCYWJlbC9jb21tb24vZGNmLW1vZGFsLmpzIiwiYXNzZXRzL2Rpc3QvanMvYXBwL3ByZUJhYmVsL2NvbW1vbi9kY2YtdXVpZEdlbi5qcyIsImV4YW1wbGUvanMvc3JjL21haW4tYm9keS5qcyIsIm5vZGVfbW9kdWxlcy9ib2R5LXNjcm9sbC1sb2NrL2xpYi9ib2R5U2Nyb2xsTG9jay5taW4uanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7OztBQ0FBLENBQUUsV0FBUyxJQUFULEVBQWUsT0FBZixFQUF3QjtBQUN4QixNQUFJLE9BQU8sTUFBUCxLQUFrQixVQUFsQixJQUFnQyxPQUFPLEdBQTNDLEVBQWdEO0FBQzlDLFdBQU8sRUFBUCxFQUFXLE9BQVg7QUFDRCxHQUZELE1BRU8sSUFBSSxRQUFPLE9BQVAseUNBQU8sT0FBUCxPQUFtQixRQUF2QixFQUFpQztBQUN0QyxXQUFPLE9BQVAsR0FBaUIsU0FBakI7QUFDRCxHQUZNLE1BRUE7QUFDTCxTQUFLLFdBQUwsR0FBbUIsU0FBbkI7QUFDRDtBQUNGLENBUkMsYUFRTSxZQUFXO0FBQUEsTUFDYixRQURhO0FBRWpCOzs7Ozs7QUFNQSxzQkFBWSxRQUFaLEVBQXNCLGNBQXRCLEVBQXNDLFVBQXRDLEVBQWtEO0FBQUE7O0FBQUE7O0FBQUEsV0E2SWxELGNBN0lrRCxHQTZJakMsVUFBQyxPQUFELEVBQVUsUUFBVixFQUF1Qjs7QUFFdEM7QUFDQSxZQUFJLE1BQUssVUFBTCxLQUFvQixDQUF4QixFQUEyQjtBQUN6QixnQkFBSyxRQUFMLENBQWMsVUFBZDtBQUNEOztBQUVEO0FBQ0EsYUFBSyxJQUFJLElBQUksQ0FBYixFQUFnQixJQUFJLFFBQVEsTUFBNUIsRUFBb0MsR0FBcEMsRUFBeUM7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RUFBd0QsVUFBVSxDQUFWLEVBQWE7QUFDMUUsVUFBSSxJQUFJLEtBQUssTUFBTCxLQUFnQixFQUFoQixHQUFxQixDQUE3QjtBQUFBLFVBQ0ksSUFBSSxNQUFNLEdBQU4sR0FBWSxDQUFaLEdBQWdCLElBQUksR0FBSixHQUFVLEdBRGxDO0FBRUEsYUFBTyxFQUFFLFFBQUYsQ0FBVyxFQUFYLENBQVA7QUFDRCxLQUpNLENBQVA7QUFLRDs7QUFFRCxTQUFPLE1BQVA7QUFDQyxDQWxCQyxDQUFEOzs7OztBQ0FEO0FBQ0EsSUFBSSxXQUFXLFFBQVEsY0FBUixDQUFmO0FBQ0EsSUFBTSxTQUFTLFNBQVMsZ0JBQVQsQ0FBMEIsZ0NBQTFCLENBQWY7QUFDQSxJQUFNLGlCQUFpQjtBQUN0QjtBQUNBLGFBQVksa0JBRlU7QUFHdEIsWUFBVyxDQUFDLENBQUQsRUFBSSxJQUFKO0FBSFcsQ0FBdkI7QUFLQSxJQUFNLGtCQUFrQixDQUFDLGFBQUQsQ0FBeEI7QUFDQSxJQUFNLGtCQUFrQixJQUFJLFFBQUosQ0FBYSxNQUFiLEVBQXFCLGNBQXJCLEVBQXFDLGVBQXJDLENBQXhCO0FBQ0EsZ0JBQWdCLFVBQWhCOztBQUdBO0FBQ0EsSUFBSSxRQUFRLFFBQVEsV0FBUixDQUFaO0FBQ0EsSUFBTSxTQUFTLFNBQVMsZ0JBQVQsQ0FBMEIsWUFBMUIsQ0FBZjtBQUNBLElBQU0saUJBQWlCLFFBQVEsa0JBQVIsQ0FBdkI7QUFDQSxJQUFNLGVBQWUsSUFBSSxLQUFKLENBQVUsTUFBVixFQUFrQixjQUFsQixDQUFyQjtBQUNBLGFBQWEsVUFBYjs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQzFDQTtBQUNBIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oKXtmdW5jdGlvbiByKGUsbix0KXtmdW5jdGlvbiBvKGksZil7aWYoIW5baV0pe2lmKCFlW2ldKXt2YXIgYz1cImZ1bmN0aW9uXCI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlO2lmKCFmJiZjKXJldHVybiBjKGksITApO2lmKHUpcmV0dXJuIHUoaSwhMCk7dmFyIGE9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitpK1wiJ1wiKTt0aHJvdyBhLmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsYX12YXIgcD1uW2ldPXtleHBvcnRzOnt9fTtlW2ldWzBdLmNhbGwocC5leHBvcnRzLGZ1bmN0aW9uKHIpe3ZhciBuPWVbaV1bMV1bcl07cmV0dXJuIG8obnx8cil9LHAscC5leHBvcnRzLHIsZSxuLHQpfXJldHVybiBuW2ldLmV4cG9ydHN9Zm9yKHZhciB1PVwiZnVuY3Rpb25cIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmUsaT0wO2k8dC5sZW5ndGg7aSsrKW8odFtpXSk7cmV0dXJuIG99cmV0dXJuIHJ9KSgpIiwiOyhmdW5jdGlvbihyb290LCBmYWN0b3J5KSB7XG4gIGlmICh0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpIHtcbiAgICBkZWZpbmUoW10sIGZhY3RvcnkpO1xuICB9IGVsc2UgaWYgKHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0Jykge1xuICAgIG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeSgpO1xuICB9IGVsc2Uge1xuICAgIHJvb3QuZGNmTGF6eUxvYWQgPSBmYWN0b3J5KCk7XG4gIH1cbn0odGhpcywgZnVuY3Rpb24oKSB7XG5jbGFzcyBMYXp5TG9hZCB7XG4gIC8qKlxuICAgKiBjbGFzcyBjb25zdHJ1Y3RvclxuICAgKiBAcGFyYW0ge2l0ZW1MaXN0fSBub2RlbGlzdCBvZiBzZWxlY3RlZCBpbWFnZXMgYW5kIHBpY3R1cmVzXG4gICAqIEBwYXJhbSB7b2JzZXJ2ZXJDb25maWd9IG9iamVjdCBvZiBpbnRlcnNlY3Rpb25PYnNlcnZlciBjb25maWd1cmF0aW9uXG4gICAqIEBwYXJhbSB7Y2xhc3NOYW1lc30gYXJyYXkgb2YgY2xhc3NlcyBhcHBsaWVkXG4gICAqL1xuICBjb25zdHJ1Y3RvcihpdGVtTGlzdCwgb2JzZXJ2ZXJDb25maWcsIGNsYXNzTmFtZXMpIHtcbiAgICB0aGlzLml0ZW1MaXN0ID0gaXRlbUxpc3Q7XG4gICAgdGhpcy5vYnNlcnZlckNvbmZpZyA9IG9ic2VydmVyQ29uZmlnO1xuICAgIHRoaXMuY2xhc3NOYW1lcyA9IGNsYXNzTmFtZXM7XG4gIH1cblxuICBweFRPdncodmFsdWUpIHtcbiAgICB2YXIgdyA9IHdpbmRvdyxcbiAgICAgIGQgPSBkb2N1bWVudCxcbiAgICAgIGUgPSBkLmRvY3VtZW50RWxlbWVudCxcbiAgICAgIGcgPSBkLmdldEVsZW1lbnRzQnlUYWdOYW1lKCdib2R5JylbMF0sXG4gICAgICB4ID0gdy5pbm5lcldpZHRoIHx8IGUuY2xpZW50V2lkdGggfHwgZy5jbGllbnRXaWR0aDtcblxuICAgIHZhciByZXN1bHQgPSAoMTAwKnZhbHVlKS94O1xuICAgIHJldHVybiByZXN1bHQgKyAndncnO1xuICB9O1xuXG4gIC8qKlxuICAgKiBBcHBseSB0aGUgaW1hZ2U6IHByZWxvYWRlZCBpbWFnZSBpcyBsb2FkZWQgYnV0IG5vdCBhcHBsaWVkIHRvIGFjdHVhbCBpbWFnZSBlbGVtZW50XG4gICAqIEBwYXJhbSB7c3RyaW5nfSBpbWFnZTogdGhlIGltYWdlIGVsZW1lbnQgdGhhdCB3ZSBhcmUgdGFyZ2V0dGluZ1xuICAgKi9cbiAgYXBwbHlJbWFnZShpbWFnZSkge1xuICAgIGNvbnN0IHNyYyA9IGltYWdlLmRhdGFzZXQuc3JjO1xuICAgIGNvbnN0IHNyY3NldCA9IGltYWdlLmRhdGFzZXQuc3Jjc2V0IHx8IG51bGw7XG4gICAgY29uc3Qgc2l6ZXMgPSBpbWFnZS5kYXRhc2V0LnNpemVzIHx8IHRoaXMucHhUT3Z3KGltYWdlLnBhcmVudEVsZW1lbnQuY2xpZW50V2lkdGgpO1xuXG4gICAgaWYgKCFzcmMpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICAvLyBQcm9jZXNzIHBhcmVudCBwaWN0dXJlIGxhenkgbG9hZCBpZiBpbWFnZSBpcyBjaGlsZCBvZiBhIHBpY3R1cmVcbiAgICBpZiAoaW1hZ2UucGFyZW50Tm9kZS5ub2RlTmFtZSA9PSAnUElDVFVSRScpIHtcbiAgICAgIHRoaXMuYXBwbHlQaWN0dXJlKGltYWdlLnBhcmVudE5vZGUpO1xuICAgIH1cblxuICAgIC8vIFByZXZlbnQgdGhpcyBmcm9tIGJlaW5nIGxhenkgbG9hZGVkIGEgc2Vjb25kIHRpbWUuXG4gICAgaW1hZ2UuY2xhc3NMaXN0LmFkZCgnZGNmLWxhenktbG9hZGVkJyk7XG4gICAgc3JjICYmIChpbWFnZS5zcmMgPSBzcmMpO1xuICAgIHNyYyAmJiAoaW1hZ2UucmVtb3ZlQXR0cmlidXRlKCdkYXRhLXNyYycpKTtcbiAgICBzcmNzZXQgJiYgKGltYWdlLnNyY3NldCA9IHNyY3NldCk7XG4gICAgc3Jjc2V0ICYmIChpbWFnZS5yZW1vdmVBdHRyaWJ1dGUoJ2RhdGEtc3Jjc2V0JykpO1xuICAgIHNpemVzICYmIChpbWFnZS5zaXplcyA9IHNpemVzKTtcbiAgICBzaXplcyAmJiAoaW1hZ2UucmVtb3ZlQXR0cmlidXRlKCdkYXRhLXNpemVzJykpO1xuICAgIHRoaXMuY2xhc3NOYW1lcy5sZW5ndGggJiYgdGhpcy5jbGFzc05hbWVzLmZvckVhY2goY2xhc3NOYW1lID0+IGltYWdlLmNsYXNzTGlzdC5hZGQoY2xhc3NOYW1lKSk7XG4gIH07XG5cbiAgLyoqXG4gICAqIEZldGNoZXMgdGhlIGltYWdlIGZvciB0aGUgZ2l2ZW4gc291cmNlXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBzcmNcbiAgICogQHBhcmFtIHtzdHJpbmd9IHNyY3NldCwgZGVmYXVsdHMgdG8gbnVsbCBpZiBub3QgcHJvdmlkZWRcbiAgICovXG4gIGZldGNoSW1hZ2Uoc3JjLCBzcmNzZXQgPSBudWxsLCBzaXplcyA9IG51bGwpIHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgY29uc3QgaW1hZ2UgPSBuZXcgSW1hZ2UoKTtcbiAgICAgIHNyYyAmJiAoaW1hZ2Uuc3JjID0gc3JjKTtcbiAgICAgIHNyY3NldCAmJiAoaW1hZ2Uuc3Jjc2V0ID0gc3Jjc2V0KTtcbiAgICAgIHNpemVzICYmIChpbWFnZS5zaXplcyA9IHNpemVzKTtcblxuICAgICAgaW1hZ2Uub25sb2FkID0gcmVzb2x2ZTtcbiAgICAgIGltYWdlLm9uZXJyb3IgPSByZWplY3Q7XG4gICAgfSk7XG4gIH1cblxuICAvKipcbiAgICogUHJlbG9hZHMgdGhlIGltYWdlXG4gICAqIEBwYXJhbSB7b2JqZWN0fSBpbWFnZVxuICAgKi9cbiAgcHJlbG9hZEltYWdlKGltYWdlKSB7XG4gICAgY29uc3Qgc3JjID0gaW1hZ2UuZGF0YXNldC5zcmM7XG4gICAgY29uc3Qgc3Jjc2V0ID0gaW1hZ2UuZGF0YXNldC5zcmNzZXQ7XG4gICAgY29uc3Qgc2l6ZXMgPSBpbWFnZS5kYXRhc2V0LnNpemVzIHx8IG51bGw7XG5cbiAgICBpZiAoIXNyYykge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHJldHVybiB0aGlzLmZldGNoSW1hZ2Uoc3JjLCBzcmNzZXQsIHNpemVzKS5jYXRjaChlcnIgPT4gYEltYWdlIGZhaWxlZCB0byBmZXRjaCAke2Vyci5tZXN9YCk7XG4gIH07XG5cbiAgLyoqXG4gICAqIEFwcGx5IHRoZSBwaWN0dXJlXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBwaWN0dXJlOiB0aGUgcGljdHVyZSBlbGVtZW50IHRoYXQgd2UgYXJlIHRhcmdldGluZ1xuICAgKi9cbiAgYXBwbHlQaWN0dXJlKHBpY3R1cmUpIHtcblxuICAgIC8vIHVwZGF0ZSBwaWN0dXJlIHNvdXJjZSB0YWdzXG4gICAgbGV0IHBpY3R1cmVTb3VyY2VzID0gcGljdHVyZS5nZXRFbGVtZW50c0J5VGFnTmFtZShcIlNPVVJDRVwiKTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHBpY3R1cmVTb3VyY2VzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBjb25zdCBzcmNzZXQgPSBwaWN0dXJlU291cmNlc1tpXS5kYXRhc2V0LnNyY3NldCB8fCBudWxsO1xuICAgICAgY29uc3Qgc2l6ZXMgPSBwaWN0dXJlU291cmNlc1tpXS5kYXRhc2V0LnNpemVzIHx8IHRoaXMucHhUT3Z3KHBpY3R1cmUucGFyZW50RWxlbWVudC5jbGllbnRXaWR0aCk7XG5cbiAgICAgIGlmICghc3Jjc2V0KSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuXG4gICAgICBzcmNzZXQgJiYgKHBpY3R1cmVTb3VyY2VzW2ldLnNyY3NldCA9IHNyY3NldCk7XG4gICAgICBzcmNzZXQgJiYgKHBpY3R1cmVTb3VyY2VzW2ldLnJlbW92ZUF0dHJpYnV0ZSgnZGF0YS1zcmNzZXQnKSk7XG4gICAgICBzaXplcyAmJiAocGljdHVyZVNvdXJjZXNbaV0uc2l6ZXMgPSBzaXplcyk7XG4gICAgICBzaXplcyAmJiAocGljdHVyZVNvdXJjZXNbaV0ucmVtb3ZlQXR0cmlidXRlKCdkYXRhLXNpemVzJykpO1xuICAgIH1cbiAgfTtcblxuICAvKipcbiAgICogTG9hZCBhbGwgb2YgdGhlIGl0ZW1zIGltbWVkaWF0ZWx5XG4gICAqIEBwYXJhbSB7Tm9kZUxpc3RPZjxFbGVtZW50Pn0gaXRlbXNcbiAgICogQHBhcmFtIHtib29sZWFufSBwcmVsb2FkXG4gICAqL1xuICBsb2FkSXRlbXNJbW1lZGlhdGVseShpdGVtcywgcHJlbG9hZCA9IHRydWUpIHtcbiAgICAvLyBmb3JlYWNoKCkgaXMgbm90IHN1cHBvcnRlZCBpbiBJRVxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgaXRlbXMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHN3aXRjaChpdGVtc1tpXS5ub2RlTmFtZSkge1xuICAgICAgICBjYXNlICdJTUcnOlxuICAgICAgICAgIGlmIChwcmVsb2FkID09PSB0cnVlKSB7XG4gICAgICAgICAgICB0aGlzLnByZWxvYWRJbWFnZShpdGVtc1tpXSk7XG4gICAgICAgICAgfVxuICAgICAgICAgIHRoaXMuYXBwbHlJbWFnZShpdGVtc1tpXSk7XG4gICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAvLyBkbyBub3RoaW5nIHNraXAgdG8gbmV4dCBpdGVtO1xuICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBEaXNjb25uZWN0IHRoZSBvYnNlcnZlclxuICAgKi9cbiAgZGlzY29ubmVjdCgpIHtcbiAgICBpZiAoIXRoaXMub2JzZXJ2ZXIpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB0aGlzLm9ic2VydmVyLmRpc2Nvbm5lY3QoKTtcbiAgfTtcblxuICAvKipcbiAgICogT24gaW50ZXJzZWN0aW9uXG4gICAqIEBwYXJhbSB7YXJyYXl9IGludGVyc2VjdGlvbiBlbnRyaWVzXG4gICAqIEBwYXJhbSB7b2JqZWN0fSBpbnRlcnNlY3Rpb24gb2JzZXJ2ZXJcbiAgICovXG4gIG9uSW50ZXJzZWN0aW9uID0gKGVudHJpZXMsIG9ic2VydmVyKSA9PiB7XG5cbiAgICAvLyBEaXNjb25uZWN0IGlmIHdlJ3ZlIGFscmVhZHkgbG9hZGVkIGFsbCBvZiB0aGUgaW1hZ2VzXG4gICAgaWYgKHRoaXMuaXRlbXNDb3VudCA9PT0gMCkge1xuICAgICAgdGhpcy5vYnNlcnZlci5kaXNjb25uZWN0KCk7XG4gICAgfVxuXG4gICAgLy8gTG9vcCB0aHJvdWdoIHRoZSBlbnRyaWVzXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBlbnRyaWVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBsZXQgZW50cnkgPSBlbnRyaWVzW2ldO1xuXG4gICAgICBpZiAoZW50cnkudGFyZ2V0Lm5vZGVOYW1lID09ICdJTUcnKSB7XG4gICAgICAgIGlmIChlbnRyeS5pbnRlcnNlY3Rpb25SYXRpbyA+IG9ic2VydmVyLnRocmVzaG9sZHNbMF0gJiYgZW50cnkuaW50ZXJzZWN0aW9uUmF0aW8gPCBvYnNlcnZlci50aHJlc2hvbGRzWzFdKSB7XG4gICAgICAgICAgdGhpcy5wcmVsb2FkSW1hZ2UoZW50cnkudGFyZ2V0KTtcbiAgICAgICAgfSBlbHNlIGlmIChlbnRyeS5pbnRlcnNlY3Rpb25SYXRpbyA+IG9ic2VydmVyLnRocmVzaG9sZHNbMV0pIHtcbiAgICAgICAgICB0aGlzLml0ZW1zQ291bnQtLTtcbiAgICAgICAgICB0aGlzLmFwcGx5SW1hZ2UoZW50cnkudGFyZ2V0KTtcbiAgICAgICAgICB0aGlzLm9ic2VydmVyLnVub2JzZXJ2ZShlbnRyeS50YXJnZXQpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9O1xuXG4gIGluaXRpYWxpemUoKSB7XG5cbiAgICBpZighdGhpcy5pdGVtTGlzdCkgcmV0dXJuO1xuXG4gICAgdGhpcy5pdGVtc0NvdW50ID0gdGhpcy5pdGVtTGlzdC5sZW5ndGg7XG5cbiAgICBpZiAoXCJsb2FkaW5nXCIgaW4gSFRNTEltYWdlRWxlbWVudC5wcm90b3R5cGUpIHtcbiAgICAgIC8vIE5hdGl2ZSBsYXp5IGxvYWRpbmcgSVMgc3VwcG9ydGVkLCBzbyBzZXQgc3JjLWRhdGEgdG8gc3JjXG4gICAgICB0aGlzLmxvYWRJdGVtc0ltbWVkaWF0ZWx5KHRoaXMuaXRlbUxpc3QsIGZhbHNlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gTmF0aXZlIGxhenkgbG9hZGluZyBOT1Qgc3VwcG9ydGVkLCBzbyBoYW5kbGUgdmlhIGphdmFzY3JpcHRcbiAgICAgIC8vIElmIGJyb3dzZXIgZG9lc24ndCBzdXBwb3J0IGludGVyc2VjdGlvbiBvYnNlcnZlciwgbG9hZCB0aGUgaXRlbXMgaW1tZWRpYXRlbHlcbiAgICAgIGlmICghKCdJbnRlcnNlY3Rpb25PYnNlcnZlcicgaW4gd2luZG93KSkge1xuICAgICAgICB0aGlzLmxvYWRJdGVtc0ltbWVkaWF0ZWx5KHRoaXMuaXRlbUxpc3QpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gSXQgaXMgc3VwcG9ydGVkLCBsb2FkIHRoZSBpdGVtc1xuICAgICAgICB0aGlzLm9ic2VydmVyID0gbmV3IEludGVyc2VjdGlvbk9ic2VydmVyKHRoaXMub25JbnRlcnNlY3Rpb24sIHRoaXMub2JzZXJ2ZXJDb25maWcpO1xuXG4gICAgICAgIC8vIGZvcmVhY2goKSBpcyBub3Qgc3VwcG9ydGVkIGluIElFXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5pdGVtTGlzdC5sZW5ndGg7IGkrKykge1xuICAgICAgICAgIGxldCBpdGVtID0gdGhpcy5pdGVtTGlzdFtpXTtcbiAgICAgICAgICBpZiAoaXRlbS5jbGFzc0xpc3QuY29udGFpbnMoJ2RjZi1sYXp5LWxvYWRlZCcpKSB7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICB0aGlzLm9ic2VydmVyLm9ic2VydmUoaXRlbSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxucmV0dXJuIExhenlMb2FkO1xufSkpO1xuIiwiOyhmdW5jdGlvbihyb290LCBmYWN0b3J5KSB7XG4gIGlmICh0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpIHtcbiAgICBkZWZpbmUoWycuL2RjZi11dWlkR2VuJ10sIGZhY3RvcnkpO1xuICB9IGVsc2UgaWYgKHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0Jykge1xuICAgIG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeShyZXF1aXJlKCcuL2RjZi11dWlkR2VuJykpO1xuICB9IGVsc2Uge1xuICAgIHJvb3QuZGNmTW9kYWwgPSBmYWN0b3J5KHJvb3QuZGNmSGVscGVyVXVpZHY0KTtcbiAgfVxufSh0aGlzLCBmdW5jdGlvbih1dWlkdjQpIHtcbmNsYXNzIE1vZGFsIHtcbiAgLyoqXG4gICAqIGNsYXNzIGNvbnN0cnVjdG9yXG4gICAqIEBwYXJhbSB7bW9kYWxzfSBtb2RhbHMgb2Ygc2VsZWN0ZWQgbW9kYWxzXG4gICAqL1xuICBjb25zdHJ1Y3Rvcihtb2RhbHMsIGJvZHlTY3JvbGxMb2NrKSB7XG4gICAgdGhpcy5tb2RhbHMgPSBtb2RhbHM7XG4gICAgdGhpcy5kaXNhYmxlQm9keVNjcm9sbCA9IG51bGw7XG4gICAgdGhpcy5lbmFibGVCb2R5U2Nyb2xsID0gbnVsbDtcbiAgICBpZiAoYm9keVNjcm9sbExvY2sgJiYgYm9keVNjcm9sbExvY2suZGlzYWJsZUJvZHlTY3JvbGwgJiYgYm9keVNjcm9sbExvY2suZW5hYmxlQm9keVNjcm9sbCkge1xuICAgICAgdGhpcy5kaXNhYmxlQm9keVNjcm9sbCA9IGJvZHlTY3JvbGxMb2NrLmRpc2FibGVCb2R5U2Nyb2xsO1xuICAgICAgdGhpcy5lbmFibGVCb2R5U2Nyb2xsID0gYm9keVNjcm9sbExvY2suZW5hYmxlQm9keVNjcm9sbDtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogUHJlcGVuZCBtb2RhbHMgdG8gYm9keSBzbyB0aGF0IGVsZW1lbnRzIG91dHNpZGUgb2YgbW9kYWwgY2FuIGJlIG1hZGUgaW5lcnRcbiAgICogQHBhcmFtIHtzdHJpbmd9IGVsOiB0aGUgZWxlbWVudCB0aGF0IHdlIGFyZSB0YXJnZXR0aW5nXG4gICAqL1xuICBhcHBlbmRUb0JvZHkoZWwpIHtcbiAgICBjb25zdCBib2R5ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignYm9keScpO1xuICAgIGJvZHkuYXBwZW5kQ2hpbGQoZWwpO1xuICB9XG5cbiAgLy8gVG9nZ2xlIG1vZGFsXG4gIHRvZ2dsZU1vZGFsKG1vZGFsSWQsIGJ0bklkKSB7XG4gICAgY29uc3QgdGhpc01vZGFsID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQobW9kYWxJZCk7XG4gICAgbGV0IG1vZGFsT3BlbiA9IHRoaXNNb2RhbC5nZXRBdHRyaWJ1dGUoJ2FyaWEtaGlkZGVuJykgPT09ICdmYWxzZScgPyB0cnVlIDogZmFsc2U7XG5cbiAgICBpZiAobW9kYWxPcGVuKSB7XG4gICAgICAvLyBtb2RhbCBvcGVuIHNvIGNsb3NlIGl0XG4gICAgICB0aGlzLmNsb3NlTW9kYWwobW9kYWxJZCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIG1vZGFsIGNsb3NlZCBzbyBvcGVuIGl0XG4gICAgICB0aGlzLm9wZW5Nb2RhbChtb2RhbElkLCBidG5JZCk7XG4gICAgfVxuICB9XG5cbiAgLy8gU2V0IG5hdiB0b2dnbGUgYnV0dG9uIHN0YXRlIGFzIG9wZW4gb3IgY2xvc2VkXG4gIC8vIE5vdGU6IEFzc3VtZXMgbmF2IHRvZ2dsZSBidXR0b25zIGFyZSBzdmdzIHdpdGggZXhwZWN0ZWQgbWFya3VwXG4gIHNldE5hdlRvZ2dsZUJ0blN0YXRlKGJ0biwgYnRuU3RhdGUpIHtcbiAgICBidG5TdGF0ZSA9IHR5cGVvZiBidG5TdGF0ZSAhPT0gJ3VuZGVmaW5lZCcgPyBidG5TdGF0ZSA6ICdvcGVuJztcbiAgICBjb25zdCBidG5TVkdzID0gYnRuLmdldEVsZW1lbnRzQnlUYWdOYW1lKCdzdmcnKTtcbiAgICBjb25zdCBidG5MYWJlbHMgPSBidG4uZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgnZGNmLW5hdi10b2dnbGUtbGFiZWwnKTtcblxuICAgIC8vIFNldCBTVkcgc3RhdGVcbiAgICBpZiAoYnRuU1ZHcy5sZW5ndGgpIHtcbiAgICAgIGNvbnN0IGdUYWdzID0gYnRuU1ZHc1swXS5nZXRFbGVtZW50c0J5VGFnTmFtZSgnZycpO1xuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBnVGFncy5sZW5ndGg7IGkrKykge1xuICAgICAgICBpZiAoZ1RhZ3NbaV0uY2xhc3NMaXN0LmNvbnRhaW5zKCdkY2YtbmF2LXRvZ2dsZS1pY29uLW9wZW4nKSkge1xuICAgICAgICAgIGlmIChidG5TdGF0ZS50b0xvd2VyQ2FzZSgpID09ICdvcGVuJykge1xuICAgICAgICAgICAgZ1RhZ3NbaV0uY2xhc3NMaXN0LnJlbW92ZSgnZGNmLWQtbm9uZScpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBnVGFnc1tpXS5jbGFzc0xpc3QuYWRkKCdkY2YtZC1ub25lJyk7XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2UgaWYgKGdUYWdzW2ldLmNsYXNzTGlzdC5jb250YWlucygnZGNmLW5hdi10b2dnbGUtaWNvbi1jbG9zZScpKSB7XG4gICAgICAgICAgaWYgKGJ0blN0YXRlLnRvTG93ZXJDYXNlKCkgPT0gJ29wZW4nKSB7XG4gICAgICAgICAgICBnVGFnc1tpXS5jbGFzc0xpc3QuYWRkKCdkY2YtZC1ub25lJyk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGdUYWdzW2ldLmNsYXNzTGlzdC5yZW1vdmUoJ2RjZi1kLW5vbmUnKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBTZXQgQnV0dG9uIExhYmVsXG4gICAgaWYgKGJ0bkxhYmVscy5sZW5ndGgpIHtcbiAgICAgIGlmIChidG5TdGF0ZS50b0xvd2VyQ2FzZSgpID09ICdvcGVuJykge1xuICAgICAgICBidG5MYWJlbHNbMF0udGV4dENvbnRlbnQgPSBidG4uZ2V0QXR0cmlidXRlKCdkYXRhLW5hdi10b2dnbGUtbGFiZWwtb3BlbicpID8gYnRuLmdldEF0dHJpYnV0ZSgnZGF0YS1uYXYtdG9nZ2xlLWxhYmVsLW9wZW4nKSA6ICdPcGVuJztcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGJ0bkxhYmVsc1swXS50ZXh0Q29udGVudCA9IGJ0bi5nZXRBdHRyaWJ1dGUoJ2RhdGEtbmF2LXRvZ2dsZS1sYWJlbC1jbG9zZWQnKSA/IGJ0bi5nZXRBdHRyaWJ1dGUoJ2RhdGEtbmF2LXRvZ2dsZS1sYWJlbC1jbG9zZWQnKSA6ICdDbG9zZSc7XG4gICAgICB9XG4gICAgfVxuXG4gIH1cblxuICAvLyBPcGVuIG1vZGFsXG4gIG9wZW5Nb2RhbChtb2RhbElkLCBvcGVuQnRuSWQpIHtcbiAgICBjb25zdCBib2R5ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignYm9keScpO1xuICAgIGNvbnN0IHNraXBOYXYgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZGNmLXNraXAtbmF2Jyk7XG4gICAgY29uc3QgaGVhZGVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2RjZi1oZWFkZXInKTtcbiAgICBjb25zdCBtYWluID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2RjZi1tYWluJyk7XG4gICAgY29uc3QgZm9vdGVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2RjZi1mb290ZXInKTtcbiAgICBjb25zdCBuYXZUb2dnbGVHcm91cCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdkY2YtbmF2LXRvZ2dsZS1ncm91cCcpO1xuICAgIGNvbnN0IG5hdlRvZ2dsZUdyb3VwUGFyZW50ID0gbmF2VG9nZ2xlR3JvdXAgJiYgbmF2VG9nZ2xlR3JvdXAucGFyZW50RWxlbWVudCA/IG5hdlRvZ2dsZUdyb3VwLnBhcmVudEVsZW1lbnQgOiBudWxsO1xuICAgIGNvbnN0IG5vbk1vZGFscyA9IFsgc2tpcE5hdiwgaGVhZGVyLCBtYWluLCBmb290ZXIgXTtcblxuICAgIGZvciAobGV0IG0gPSAwOyBtIDwgdGhpcy5tb2RhbHMubGVuZ3RoOyBtKyspIHtcbiAgICAgIGNvbnN0IG1vZGFsID0gdGhpcy5tb2RhbHNbbV07XG4gICAgICBpZiAobW9kYWwuZ2V0QXR0cmlidXRlKCdpZCcpICE9PSBtb2RhbElkKSB7XG4gICAgICAgIHRoaXMuY2xvc2VNb2RhbChtb2RhbC5nZXRBdHRyaWJ1dGUoJ2lkJykpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGNvbnN0IHRoaXNNb2RhbCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG1vZGFsSWQpO1xuICAgIGxldCBtb2RhbE9wZW4gPSB0aGlzTW9kYWwuZ2V0QXR0cmlidXRlKCdhcmlhLWhpZGRlbicpID09PSAnZmFsc2UnID8gdHJ1ZSA6IGZhbHNlO1xuXG4gICAgbGV0IG1vZGFsV2l0aE5hdlRvZ2dsZUdyb3VwID0gZmFsc2U7XG4gICAgaWYgKG9wZW5CdG5JZCkge1xuICAgICAgdGhpcy5jdXJyZW50QnRuID0gb3BlbkJ0bklkO1xuICAgICAgY29uc3Qgb3BlbkJ0biA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG9wZW5CdG5JZCk7XG4gICAgICBtb2RhbFdpdGhOYXZUb2dnbGVHcm91cCA9IG9wZW5CdG4gJiYgb3BlbkJ0bi5nZXRBdHRyaWJ1dGUoJ2RhdGEtd2l0aC1uYXYtdG9nZ2xlLWdyb3VwJykgPT09ICd0cnVlJztcbiAgICAgIGlmIChtb2RhbFdpdGhOYXZUb2dnbGVHcm91cCkge1xuICAgICAgICB0aGlzLnNldE5hdlRvZ2dsZUJ0blN0YXRlKG9wZW5CdG4sICdjbG9zZWQnKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICB0aGlzLmN1cnJlbnRNb2RhbCA9IG1vZGFsSWQ7XG5cbiAgICAvLyBEb24ndCBvcGVuIG1vZGFsIGlmIGl0J3MgYWxyZWFkeSBvcGVuXG4gICAgaWYgKG1vZGFsT3Blbikge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIC8vIFNldCBlbGVtZW50cyBvdXRzaWRlIG9mIG1vZGFsIHRvIGJlIGluZXJ0IGFuZCBoaWRkZW4gZnJvbSBzY3JlZW4gcmVhZGVyc1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbm9uTW9kYWxzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBpZiAobW9kYWxXaXRoTmF2VG9nZ2xlR3JvdXAgJiYgbmF2VG9nZ2xlR3JvdXAgJiYgbm9uTW9kYWxzW2ldID09PSBuYXZUb2dnbGVHcm91cFBhcmVudCkge1xuICAgICAgICBub25Nb2RhbHNbaV0uc2V0QXR0cmlidXRlKCdhcmlhLWhpZGRlbicsJ2ZhbHNlJyk7XG5cbiAgICAgICAgLy8gaGlkZSBhbGwgY2hpbGRyZW4gb2YgbmF2VG9nZ2xlR3JvdXBQYXJlbnQgZXhjZXB0IG5hdlRvZ2dsZUdyb3VwXG4gICAgICAgIGNvbnN0IGNoaWxkcmVuID0gbmF2VG9nZ2xlR3JvdXBQYXJlbnQuY2hpbGROb2RlcztcbiAgICAgICAgZm9yIChsZXQgaiA9IDA7IGogPCBjaGlsZHJlbi5sZW5ndGg7IGorKykge1xuICAgICAgICAgIGlmIChjaGlsZHJlbltqXS5ub2RlVHlwZSA9PT0gTm9kZS5FTEVNRU5UX05PREUpIHtcbiAgICAgICAgICAgIGlmIChjaGlsZHJlbltqXSA9PT0gbmF2VG9nZ2xlR3JvdXApIHtcbiAgICAgICAgICAgICAgY2hpbGRyZW5bal0uc2V0QXR0cmlidXRlKCdhcmlhLWhpZGRlbicsICdmYWxzZScpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgY2hpbGRyZW5bal0uc2V0QXR0cmlidXRlKCdhcmlhLWhpZGRlbicsICd0cnVlJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBub25Nb2RhbHNbaV0uc2V0QXR0cmlidXRlKCdhcmlhLWhpZGRlbicsJ3RydWUnKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBQcmV2ZW50IGJvZHkgZnJvbSBzY3JvbGxpbmdcbiAgICBpZiAodGhpcy5kaXNhYmxlQm9keVNjcm9sbCkge1xuICAgICAgdGhpcy5kaXNhYmxlQm9keVNjcm9sbCh0aGlzTW9kYWwpO1xuICAgIH1cblxuICAgIC8vIEFkZCBgLmRjZi1tb2RhbC1pcy1vcGVuYCBoZWxwZXIgY2xhc3MgdG8gYm9keVxuICAgIGJvZHkuY2xhc3NMaXN0LmFkZCgnZGNmLW1vZGFsLWlzLW9wZW4nKTtcblxuICAgIC8vIFNldCBhdHRyaWJ1dGUgZm9yIHRoaXMgbW9kYWxcbiAgICB0aGlzTW9kYWwuc2V0QXR0cmlidXRlKCdhcmlhLWhpZGRlbicsICdmYWxzZScpO1xuXG4gICAgLy8gQWRkL3JlbW92ZSBjbGFzc2VzIHRvIHRoaXMgbW9kYWxcbiAgICB0aGlzTW9kYWwuY2xhc3NMaXN0LnJlbW92ZSgnZGNmLW9wYWNpdHktMCcsICdkY2YtcG9pbnRlci1ldmVudHMtbm9uZScsICdkY2YtaW52aXNpYmxlJyk7XG4gICAgdGhpc01vZGFsLmNsYXNzTGlzdC5hZGQoJ2RjZi1vcGFjaXR5LTEwMCcsICdkY2YtcG9pbnRlci1ldmVudHMtYXV0bycpO1xuXG4gICAgLy8gQXBwbHkgbW9kYWwgd2l0aCB0b2dnbGUgZ3JvdXAgY2xhc3MgaWYgcmVxdWVzdGVkXG4gICAgaWYgKG1vZGFsV2l0aE5hdlRvZ2dsZUdyb3VwKSB7XG4gICAgICB0aGlzTW9kYWwuY2xhc3NMaXN0LmFkZCgnZGNmLXotbW9kYWwtd2l0aC1uYXYtdG9nZ2xlLWdyb3VwJyk7XG4gICAgfVxuICAgIGNvbnN0IGtleWNvZGVUYWIgPSA5O1xuICAgIGNvbnN0IHRhYkZvY3VzRWxzID0gdGhpc01vZGFsLnF1ZXJ5U2VsZWN0b3JBbGwoJ2J1dHRvbjpub3QoW2hpZGRlbl0pOm5vdChbZGlzYWJsZWRdKSwgJyArXG4gICAgICAnW2hyZWZdOm5vdChbaGlkZGVuXSksIGlucHV0Om5vdChbaGlkZGVuXSk6bm90KFt0eXBlPVwiaGlkZGVuXCJdKTpub3QoW2Rpc2FibGVkXSksICcgK1xuICAgICAgJ3NlbGVjdDpub3QoW2hpZGRlbl0pOm5vdChbZGlzYWJsZWRdKSwgdGV4dGFyZWE6bm90KFtoaWRkZW5dKTpub3QoW2Rpc2FibGVkXSksICcgK1xuICAgICAgJ1t0YWJpbmRleD1cIjBcIl06bm90KFtoaWRkZW5dKTpub3QoW2Rpc2FibGVkXSksIHN1bW1hcnk6bm90KFtoaWRkZW5dKSwgJyArXG4gICAgICAnW2NvbnRlbnRlZGl0YWJsZV06bm90KFtoaWRkZW5dKSwgYXVkaW9bY29udHJvbHNdOm5vdChbaGlkZGVuXSksICcgK1xuICAgICAgJ3ZpZGVvW2NvbnRyb2xzXTpub3QoW2hpZGRlbl0pJyk7XG4gICAgbGV0IGZpcnN0VGFiRm9jdXNFbCA9IHRhYkZvY3VzRWxzWzBdO1xuICAgIGxldCBsYXN0VGFiRm9jdXNFbCA9IHRhYkZvY3VzRWxzW3RhYkZvY3VzRWxzLmxlbmd0aCAtIDFdO1xuXG4gICAgLy8gU2VuZCBmb2N1cyB0byB0aGUgbW9kYWxcbiAgICB0aGlzTW9kYWwuZm9jdXMoKTtcblxuICAgIC8vIFRyYXAgZm9jdXMgaW5zaWRlIHRoZSBtb2RhbCBjb250ZW50XG4gICAgdGhpc01vZGFsLmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCBmdW5jdGlvbihlKSB7XG5cbiAgICAgIGxldCBpc1RhYlByZXNzZWQgPSBlLmtleSA9PT0gJ1RhYicgfHwgZS5rZXlDb2RlID09PSBrZXljb2RlVGFiO1xuXG4gICAgICBpZiAoIWlzVGFiUHJlc3NlZCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGlmIChlLmtleSA9PT0gJ1RhYicgfHwgZS5rZXlDb2RlID09PSBrZXljb2RlVGFiKSB7XG4gICAgICAgIGlmICggZS5zaGlmdEtleSApIHsgLy8gVGFiIGJhY2t3YXJkcyAoc2hpZnQgKyB0YWIpXG4gICAgICAgICAgaWYgKGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQgPT09IGZpcnN0VGFiRm9jdXNFbCkge1xuICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgbGFzdFRhYkZvY3VzRWwuZm9jdXMoKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7IC8vIFRhYiBmb3J3YXJkc1xuICAgICAgICAgIGlmIChkb2N1bWVudC5hY3RpdmVFbGVtZW50ID09PSBsYXN0VGFiRm9jdXNFbCkge1xuICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgZmlyc3RUYWJGb2N1c0VsLmZvY3VzKCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICAvLyBUcmlnZ2VyIG9wZW4gbW9kYWwgZXZlbnQgZm9yIHRoaXMgbW9kYWwgdG8gYWxsb3cgZXZlbnQgbGlzdGVuZXJzIHRvIGhhbmRsZVxuICAgIGNvbnN0IGV2ZW50TmFtZSA9ICdNb2RhbE9wZW5FdmVudF8nICsgbW9kYWxJZDtcbiAgICBkb2N1bWVudC5kaXNwYXRjaEV2ZW50KG5ldyBDdXN0b21FdmVudChldmVudE5hbWUpKTtcbiAgfVxuXG4gIC8vIENsb3NlIG1vZGFsXG4gIGNsb3NlTW9kYWwobW9kYWxJZCkge1xuXG4gICAgY29uc3QgYm9keSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2JvZHknKTtcbiAgICBjb25zdCBza2lwTmF2ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2RjZi1za2lwLW5hdicpO1xuICAgIGNvbnN0IGhlYWRlciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdkY2YtaGVhZGVyJyk7XG4gICAgY29uc3QgbWFpbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdkY2YtbWFpbicpO1xuICAgIGNvbnN0IGZvb3RlciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdkY2YtZm9vdGVyJyk7XG4gICAgY29uc3QgbmF2VG9nZ2xlR3JvdXAgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZGNmLW5hdi10b2dnbGUtZ3JvdXAnKTtcbiAgICBjb25zdCBuYXZUb2dnbGVHcm91cFBhcmVudCA9IG5hdlRvZ2dsZUdyb3VwICYmIG5hdlRvZ2dsZUdyb3VwLnBhcmVudEVsZW1lbnQgPyBuYXZUb2dnbGVHcm91cC5wYXJlbnRFbGVtZW50OiBudWxsO1xuICAgIGNvbnN0IG5vbk1vZGFscyA9IFsgc2tpcE5hdiwgaGVhZGVyLCBtYWluLCBmb290ZXIgXTtcbiAgICBjb25zdCB0aGlzTW9kYWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChtb2RhbElkKTtcbiAgICBsZXQgbW9kYWxDbG9zZWQgPSB0aGlzTW9kYWwuZ2V0QXR0cmlidXRlKCdhcmlhLWhpZGRlbicpID09PSAndHJ1ZScgPyB0cnVlIDogZmFsc2U7XG4gICAgdGhpcy5jdXJyZW50TW9kYWwgPSBudWxsO1xuXG4gICAgLy8gRG9uJ3QgY2xvc2UgbW9kYWwgaWYgaXQncyBhbHJlYWR5IGNsb3NlZFxuICAgIGlmIChtb2RhbENsb3NlZCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIC8vIFJlbW92ZSBgLmRjZi1tb2RhbC1pcy1vcGVuYCBoZWxwZXIgY2xhc3MgZnJvbSBib2R5XG4gICAgYm9keS5jbGFzc0xpc3QucmVtb3ZlKCdkY2YtbW9kYWwtaXMtb3BlbicpO1xuXG4gICAgaWYgKHRoaXMuY3VycmVudEJ0bikge1xuICAgICAgY29uc3QgY2xvc2VCdG4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCh0aGlzLmN1cnJlbnRCdG4pO1xuICAgICAgaWYgKGNsb3NlQnRuICYmIGNsb3NlQnRuLmdldEF0dHJpYnV0ZSgnZGF0YS13aXRoLW5hdi10b2dnbGUtZ3JvdXAnKSA9PT0gJ3RydWUnKSB7XG4gICAgICAgIHRoaXMuc2V0TmF2VG9nZ2xlQnRuU3RhdGUoY2xvc2VCdG4sICdvcGVuJyk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gUmVzdG9yZSB2aXNpYmlsaXR5IGFuZCBmdW5jdGlvbmFsaXR5IHRvIGVsZW1lbnRzIG91dHNpZGUgb2YgbW9kYWxcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IG5vbk1vZGFscy5sZW5ndGg7IGkrKykge1xuICAgICAgaWYgKG5hdlRvZ2dsZUdyb3VwICYmIG5vbk1vZGFsc1tpXSA9PT0gbmF2VG9nZ2xlR3JvdXBQYXJlbnQpIHtcbiAgICAgICAgLy8gc2hvdyBhbGwgY2hpbGRyZW4gb2YgbmF2VG9nZ2xlR3JvdXBQYXJlbnRcbiAgICAgICAgY29uc3QgY2hpbGRyZW4gPSBuYXZUb2dnbGVHcm91cFBhcmVudC5jaGlsZE5vZGVzO1xuICAgICAgICBmb3IgKGxldCBqID0gMDsgaiA8IGNoaWxkcmVuLmxlbmd0aDsgaisrKSB7XG4gICAgICAgICAgaWYgKGNoaWxkcmVuW2pdLm5vZGVUeXBlID09PSBOb2RlLkVMRU1FTlRfTk9ERSkge1xuICAgICAgICAgICAgY2hpbGRyZW5bal0uc2V0QXR0cmlidXRlKCdhcmlhLWhpZGRlbicsICdmYWxzZScpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAvLyBzaG93IGFsbCBub25Nb2RhbHNcbiAgICAgIG5vbk1vZGFsc1tpXS5zZXRBdHRyaWJ1dGUoJ2FyaWEtaGlkZGVuJywnZmFsc2UnKTtcbiAgICB9XG5cbiAgICAvLyBTZXQgYXR0cmlidXRlIGZvciB0aGlzIG1vZGFsXG4gICAgdGhpc01vZGFsLnNldEF0dHJpYnV0ZSgnYXJpYS1oaWRkZW4nLCAndHJ1ZScpO1xuXG4gICAgLy8gQWRkL3JlbW92ZSBjbGFzc2VzIHRvIHRoaXMgbW9kYWxcbiAgICB0aGlzTW9kYWwuY2xhc3NMaXN0LnJlbW92ZSgnZGNmLW9wYWNpdHktMTAwJywgJ2RjZi1wb2ludGVyLWV2ZW50cy1hdXRvJywgJ3otbW9kYWwtd2l0aC1uYXYtdG9nZ2xlLWdyb3VwJyk7XG4gICAgdGhpc01vZGFsLmNsYXNzTGlzdC5hZGQoJ2RjZi1vcGFjaXR5LTAnLCAnZGNmLXBvaW50ZXItZXZlbnRzLW5vbmUnKTtcblxuICAgIC8vIE1vZGFsIHRyYW5zaXRpb25cbiAgICBmdW5jdGlvbiBtb2RhbFRyYW5zaXRpb24oKSB7XG5cbiAgICBcdC8vIFJlbW92ZSBldmVudCBsaXN0ZW5lciBhZnRlciB0aGUgbW9kYWwgdHJhbnNpdGlvblxuICAgICAgdGhpc01vZGFsLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3RyYW5zaXRpb25lbmQnLCBtb2RhbFRyYW5zaXRpb24pO1xuXG4gICAgICAvLyBBZGQgdGhlIGAuZGNmLWludmlzaWJsZWAgY2xhc3MgdG8gdGhpcyBtb2RhbCBhZnRlciB0aGUgdHJhbnNpdGlvblxuICAgICAgaWYgKCF0aGlzTW9kYWwuY2xhc3NMaXN0LmNvbnRhaW5zKCdkY2YtaW52aXNpYmxlJykpIHtcbiAgICAgICAgdGhpc01vZGFsLmNsYXNzTGlzdC5hZGQoJ2RjZi1pbnZpc2libGUnKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBBZGQgZXZlbnQgbGlzdGVuZXIgZm9yIHRoZSBlbmQgb2YgdGhlIG1vZGFsIHRyYW5zaXRpb25cbiAgICB0aGlzTW9kYWwuYWRkRXZlbnRMaXN0ZW5lcigndHJhbnNpdGlvbmVuZCcsIG1vZGFsVHJhbnNpdGlvbik7XG5cbiAgICAvLyBTZW5kIGZvY3VzIGJhY2sgdG8gYnV0dG9uIHRoYXQgb3BlbmVkIG1vZGFsXG4gICAgaWYgKHRoaXMuY3VycmVudEJ0bikge1xuICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQodGhpcy5jdXJyZW50QnRuKS5mb2N1cygpO1xuICAgIH1cblxuICAgIC8vIEFsbG93IGJvZHkgdG8gc2Nyb2xsXG4gICAgaWYgKHRoaXMuZW5hYmxlQm9keVNjcm9sbCkge1xuICAgICAgdGhpcy5lbmFibGVCb2R5U2Nyb2xsKHRoaXNNb2RhbCk7XG4gICAgfVxuXG4gICAgLy8gVHJpZ2dlciBjbG9zZSBtb2RhbCBldmVudCBmb3IgdGhpcyBtb2RhbCB0byBhbGxvdyBldmVudCBsaXN0ZW5lcnMgdG8gaGFuZGxlXG4gICAgY29uc3QgZXZlbnROYW1lID0gJ01vZGFsQ2xvc2VFdmVudF8nICsgbW9kYWxJZDtcbiAgICBkb2N1bWVudC5kaXNwYXRjaEV2ZW50KG5ldyBDdXN0b21FdmVudChldmVudE5hbWUpKTtcbiAgfVxuXG4gIGJ0blRvZ2dsZUxpc3RlbihidG5Ub2dnbGVNb2RhbCwgbW9kYWxJZCwgYnRuSWQpIHtcbiAgICBsZXQgbW9kYWxJbnN0YW5jZSA9IHRoaXM7XG5cbiAgICAvLyBMaXN0ZW4gZm9yIHdoZW4gJ29wZW4gbW9kYWwnIGJ1dHRvbiBpcyBwcmVzc2VkXG4gICAgYnRuVG9nZ2xlTW9kYWwuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoKSB7XG4gICAgICAvLyBUb2dnbGUgbW9kYWwgd2hlbiBidXR0b24gaXMgcHJlc3NlZFxuICAgICAgbW9kYWxJbnN0YW5jZS50b2dnbGVNb2RhbChtb2RhbElkLCBidG5JZCk7XG4gICAgfSwgZmFsc2UpO1xuICB9XG5cbiAgYnRuQ2xvc2VMaXN0ZW4oYnRuQ2xvc2VNb2RhbCwgbW9kYWwpIHtcbiAgICBsZXQgbW9kYWxJbnN0YW5jZSA9IHRoaXM7XG5cbiAgICAvLyBMaXN0ZW4gZm9yIHdoZW4gJ2Nsb3NlIG1vZGFsJyBidXR0b24gaXMgcHJlc3NlZFxuICAgIGJ0bkNsb3NlTW9kYWwuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoKSB7XG5cbiAgICAgIC8vIE9wZW4gbW9kYWwgd2hlbiBidXR0b24gaXMgcHJlc3NlZFxuICAgICAgbW9kYWxJbnN0YW5jZS5jbG9zZU1vZGFsKG1vZGFsLmdldEF0dHJpYnV0ZSgnaWQnKSk7XG4gICAgfSwgZmFsc2UpO1xuICB9XG5cbiAgb3ZlcmxheUxpc3Rlbihtb2RhbCwgbW9kYWxXcmFwcGVyKSB7XG4gICAgbGV0IG1vZGFsSW5zdGFuY2UgPSB0aGlzO1xuXG4gICAgLy8gTGlzdGVuIGZvciBjbGlja3Mgb24gdGhlIG9wZW4gbW9kYWxcbiAgICBtb2RhbC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uIChldmVudCkge1xuXG4gICAgICAvLyBJZiB0aGUgY2xpY2sgaXMgaW4gbW9kYWwgd3JhcHBlciwgbGVhdmUgdGhlIG1vZGFsIG9wZW5cbiAgICAgIGlmIChtb2RhbFdyYXBwZXIuY29udGFpbnMoZXZlbnQudGFyZ2V0KSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIC8vIElmIHRoZSBjbGljayBpcyBvdXRzaWRlIHRoZSBtb2RhbCB3cmFwcGVyIChvbiB0aGUgbW9kYWwgb3ZlcmxheSksIGNsb3NlIHRoZSBtb2RhbFxuICAgICAgbW9kYWxJbnN0YW5jZS5jbG9zZU1vZGFsKG1vZGFsLmdldEF0dHJpYnV0ZSgnaWQnKSk7XG4gICAgfSk7XG4gIH1cblxuICBlc2NMaXN0ZW4oKSB7XG4gICAgbGV0IG1vZGFsSW5zdGFuY2UgPSB0aGlzO1xuXG4gICAgLy8gTGlzdGVuIGZvciB3aGVuICdlc2MnIGtleSBpcyBwcmVzc2VkXG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIGZ1bmN0aW9uIChldmVudCkge1xuXG4gICAgICAvLyBDbG9zZSB0aGUgY3VycmVudGx5IG9wZW4gbW9kYWwgd2hlbiAnZXNjJyBrZXkgaXMgcHJlc3NlZFxuICAgICAgaWYgKGV2ZW50LndoaWNoID09PSAyNyAmJiBtb2RhbEluc3RhbmNlLmN1cnJlbnRNb2RhbCkge1xuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICBtb2RhbEluc3RhbmNlLmNsb3NlTW9kYWwobW9kYWxJbnN0YW5jZS5jdXJyZW50TW9kYWwpO1xuICAgICAgfVxuICAgIH0pO1xuXG4gIH1cblxuICBnZW5lcmF0ZVVVSUQoKSB7XG4gICAgbGV0IGQgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKTtcbiAgICBsZXQgZDIgPSAocGVyZm9ybWFuY2UgJiYgcGVyZm9ybWFuY2Uubm93ICYmIChwZXJmb3JtYW5jZS5ub3coKSoxMDAwKSkgfHwgMDtcbiAgICByZXR1cm4gJ3h4eHh4eHh4LXh4eHgtNHh4eC15eHh4LXh4eHh4eHh4eHh4eCcucmVwbGFjZSgvW3h5XS9nLCBmdW5jdGlvbihjKSB7XG4gICAgICBsZXQgciA9IE1hdGgucmFuZG9tKCkgKiAxNjtcbiAgICAgIGlmKGQgPiAwKXtcbiAgICAgICAgciA9IChkICsgciklMTYgfCAwO1xuICAgICAgICBkID0gTWF0aC5mbG9vcihkLzE2KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHIgPSAoZDIgKyByKSUxNiB8IDA7XG4gICAgICAgIGQyID0gTWF0aC5mbG9vcihkMi8xNik7XG4gICAgICB9XG4gICAgICByZXR1cm4gKGMgPT09ICd4JyA/IHIgOiAociAmIDB4MyB8IDB4OCkpLnRvU3RyaW5nKDE2KTtcbiAgICB9KTtcbiAgfVxuXG4gIGluaXRpYWxpemUoKSB7XG4gICAgaWYoIXRoaXMubW9kYWxzKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgLy8gRGVmaW5lIGNvbnN0YW50cyB1c2VkIGluIG1vZGFsIGNvbXBvbmVudFxuICAgIGNvbnN0IGJvZHkgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdib2R5Jyk7XG4gICAgY29uc3QgYnRuc1RvZ2dsZU1vZGFsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmRjZi1idG4tdG9nZ2xlLW1vZGFsJyk7XG4gICAgY29uc3QgYnRuc0Nsb3NlTW9kYWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuZGNmLWJ0bi1jbG9zZS1tb2RhbCcpO1xuICAgIGNvbnN0IG1vZGFsc1dyYXBwZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuZGNmLW1vZGFsLXdyYXBwZXInKTtcbiAgICBjb25zdCBtb2RhbHNDb250ZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmRjZi1tb2RhbC1jb250ZW50Jyk7XG4gICAgY29uc3QgbW9kYWxzSGVhZGVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmRjZi1tb2RhbC1oZWFkZXInKTtcblxuICAgIGxldCBjdXJyZW50QnRuID0gbnVsbDtcbiAgICBsZXQgY3VycmVudE1vZGFsID0gbnVsbDtcblxuICAgIC8vIExvb3AgdGhyb3VnaCBhbGwgYnV0dG9ucyB0aGF0IG9wZW4gbW9kYWxzXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBidG5zVG9nZ2xlTW9kYWwubGVuZ3RoOyBpKyspIHtcbiAgICAgIGNvbnN0IGJ0blRvZ2dsZU1vZGFsID0gYnRuc1RvZ2dsZU1vZGFsW2ldO1xuICAgICAgY29uc3QgbW9kYWxJZCA9IGJ0blRvZ2dsZU1vZGFsLmdldEF0dHJpYnV0ZSgnZGF0YS10b2dnbGVzLW1vZGFsJyk7XG5cbiAgICAgIC8vIEdlbmVyYXRlIHVuaXF1ZSBJRCBmb3IgZWFjaCAnb3BlbiBtb2RhbCcgYnV0dG9uXG4gICAgICBjb25zdCBidG5JZCA9IHRoaXMuZ2VuZXJhdGVVVUlEKCk7XG4gICAgICBidG5Ub2dnbGVNb2RhbC5zZXRBdHRyaWJ1dGUoJ2lkJywgYnRuSWQpO1xuXG4gICAgICAvLyBCdXR0b25zIGFyZSBkaXNhYmxlZCBieSBkZWZhdWx0IHVudGlsIEphdmFTY3JpcHQgaGFzIGxvYWRlZC5cbiAgICAgIC8vIFJlbW92ZSB0aGUgJ2Rpc2FibGVkJyBhdHRyaWJ1dGUgdG8gbWFrZSB0aGVtIGZ1bmN0aW9uYWwuXG4gICAgICBidG5Ub2dnbGVNb2RhbC5yZW1vdmVBdHRyaWJ1dGUoJ2Rpc2FibGVkJyk7XG4gICAgICB0aGlzLmJ0blRvZ2dsZUxpc3RlbihidG5Ub2dnbGVNb2RhbCwgbW9kYWxJZCwgYnRuSWQpO1xuICAgIH1cblxuICAgIC8vIExvb3AgdGhyb3VnaCBhbGwgbW9kYWxzXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLm1vZGFscy5sZW5ndGg7IGkrKykge1xuICAgICAgY29uc3QgbW9kYWwgPSB0aGlzLm1vZGFsc1tpXTtcbiAgICAgIGNvbnN0IG1vZGFsV3JhcHBlciA9IG1vZGFsc1dyYXBwZXJbaV07XG4gICAgICBjb25zdCBtb2RhbENvbnRlbnQgPSBtb2RhbHNDb250ZW50W2ldO1xuICAgICAgY29uc3QgbW9kYWxIZWFkZXIgPSBtb2RhbHNIZWFkZXJbaV07XG4gICAgICBjb25zdCBidG5DbG9zZU1vZGFsID0gYnRuc0Nsb3NlTW9kYWxbaV07XG4gICAgICBjb25zdCBtb2RhbElkID0gbW9kYWwuaWQ7XG4gICAgICBjb25zdCBtb2RhbEhlYWRpbmdJZCA9IG1vZGFsSWQgKyAnLWhlYWRpbmcnO1xuXG4gICAgICAvLyBHZXQgYWxsIGhlYWRpbmdzIGluIGVhY2ggbW9kYWwgaGVhZGVyXG4gICAgICBjb25zdCBtb2RhbEhlYWRpbmdzID0gbW9kYWxIZWFkZXIucXVlcnlTZWxlY3RvckFsbCgnaDEsIGgyLCBoMywgaDQsIGg1LCBoNicpO1xuXG4gICAgICAvLyBTZXQgSUQgb24gdGhlIGZpcnN0IGhlYWRpbmcgb2YgZWFjaCBtb2RhbFxuICAgICAgbW9kYWxIZWFkaW5nc1swXS5pZCA9IG1vZGFsSGVhZGluZ0lkO1xuXG4gICAgICAvLyBBcHBlbmQgbW9kYWxzIHRvIGJvZHkgc28gdGhhdCBlbGVtZW50cyBvdXRzaWRlIG9mIG1vZGFsIGNhbiBiZSBoaWRkZW4gd2hlbiBtb2RhbCBpcyBvcGVuXG4gICAgICB0aGlzLmFwcGVuZFRvQm9keShtb2RhbCk7XG5cbiAgICAgIC8vIE1vZGFscyBhcmUgaGlkZGVuIGJ5IGRlZmF1bHQgdW50aWwgSmF2YVNjcmlwdCBoYXMgbG9hZGVkLlxuICAgICAgLy8gUmVtb3ZlIGBoaWRkZW5gIGF0dHJpYnV0ZSwgdGhlbiBsYXRlciByZXBsYWNlIHdpdGggYC5kY2YtaW52aXNpYmxlYCB0byBhbGxvdyBmb3IgbW9kYWwgdHJhbnNpdGlvbnMuXG4gICAgICBtb2RhbC5yZW1vdmVBdHRyaWJ1dGUoJ2hpZGRlbicpO1xuXG4gICAgICAvLyBTZXQgYXR0cmlidXRlcyBmb3IgZWFjaCBtb2RhbFxuICAgICAgbW9kYWwuc2V0QXR0cmlidXRlKCdhcmlhLWxhYmVsbGVkYnknLCBtb2RhbEhlYWRpbmdJZCk7XG4gICAgICBtb2RhbC5zZXRBdHRyaWJ1dGUoJ2FyaWEtaGlkZGVuJywgJ3RydWUnKTtcbiAgICAgIG1vZGFsLnNldEF0dHJpYnV0ZSgncm9sZScsICdkaWFsb2cnKTtcbiAgICAgIG1vZGFsLnNldEF0dHJpYnV0ZSgndGFiaW5kZXgnLCAnLTEnKTtcblxuICAgICAgLy8gQ2hlY2sgbW9kYWwgZm9yIGFueSBhZGRpdGlvbmFsIGNsYXNzZXNcbiAgICAgIGlmIChtb2RhbC5jbGFzc0xpc3QubGVuZ3RoID09PSAxICYmIG1vZGFsLmNsYXNzTGlzdC5jb250YWlucygnZGNmLW1vZGFsJykpIHtcbiAgICAgICAgLy8gSWYgbm8gY3VzdG9tIGNsYXNzZXMgYXJlIHByZXNlbnQsIGFkZCBkZWZhdWx0IGJhY2tncm91bmQgdXRpbGl0eSBjbGFzcyB0byBtb2RhbFxuICAgICAgICBtb2RhbC5jbGFzc0xpc3QuYWRkKCdkY2YtYmctb3ZlcmxheS1kYXJrJyk7XG4gICAgICB9XG5cbiAgICAgIC8vIEFkZCBkZWZhdWx0IHV0aWxpdHkgY2xhc3NlcyB0byBlYWNoIG1vZGFsXG4gICAgICBtb2RhbC5jbGFzc0xpc3QuYWRkKCdkY2YtZml4ZWQnLCAnZGNmLXBpbi10b3AnLCAnZGNmLXBpbi1sZWZ0JywgJ2RjZi1oLTEwMCUnLCAnZGNmLXctMTAwJScsICdkY2YtZC1mbGV4JywgJ2RjZi1haS1jZW50ZXInLCAnZGNmLWpjLWNlbnRlcicsICdkY2Ytb3BhY2l0eS0wJywgJ2RjZi1wb2ludGVyLWV2ZW50cy1ub25lJywgJ2RjZi1pbnZpc2libGUnKTtcblxuICAgICAgLy8gU2V0IGF0dHJpYnV0ZSBmb3IgbW9kYWwgd3JhcHBlclxuICAgICAgbW9kYWxXcmFwcGVyLnNldEF0dHJpYnV0ZSgncm9sZScsICdkb2N1bWVudCcpO1xuXG4gICAgICAvLyBDaGVjayBtb2RhbCB3cmFwcGVyIGZvciBhbnkgYWRkaXRpb25hbCBjbGFzc2VzXG4gICAgICBpZiAobW9kYWxXcmFwcGVyLmNsYXNzTGlzdC5sZW5ndGggPT09IDEgJiYgbW9kYWxXcmFwcGVyLmNsYXNzTGlzdC5jb250YWlucygnZGNmLW1vZGFsLXdyYXBwZXInKSkge1xuICAgICAgICAvLyBJZiBubyBjdXN0b20gY2xhc3NlcyBhcmUgcHJlc2VudCwgYWRkIGRlZmF1bHQgdXRpbGl0eSBjbGFzc2VzIHRvIG1vZGFsIHdyYXBwZXJcbiAgICAgICAgbW9kYWxXcmFwcGVyLmNsYXNzTGlzdC5hZGQoJ2RjZi1yZWxhdGl2ZScsICdkY2YtaC1hdXRvJywgJ2RjZi1vdmVyZmxvdy15LWF1dG8nKTtcbiAgICAgIH1cblxuICAgICAgLy8gQ2hlY2sgbW9kYWwgaGVhZGVyIGZvciBhbnkgYWRkaXRpb25hbCBjbGFzc2VzXG4gICAgICBpZiAobW9kYWxIZWFkZXIuY2xhc3NMaXN0Lmxlbmd0aCA9PT0gMSAmJiBtb2RhbEhlYWRlci5jbGFzc0xpc3QuY29udGFpbnMoJ2RjZi1tb2RhbC1oZWFkZXInKSkge1xuICAgICAgICAvLyBJZiBubyBjdXN0b20gY2xhc3NlcyBhcmUgcHJlc2VudCwgYWRkIGRlZmF1bHQgdXRpbGl0eSBjbGFzc2VzIHRvIG1vZGFsIGhlYWRlclxuICAgICAgICBtb2RhbEhlYWRlci5jbGFzc0xpc3QuYWRkKCdkY2Ytd3JhcHBlcicsICdkY2YtcHQtOCcsICdkY2Ytc3RpY2t5JywgJ2RjZi1waW4tdG9wJyk7XG4gICAgICB9XG5cbiAgICAgIC8vIENoZWNrIGVhY2ggJ2Nsb3NlJyBidXR0b24gZm9yIGFueSBhZGRpdGlvbmFsIGNsYXNzZXNcbiAgICAgIGlmIChidG5DbG9zZU1vZGFsLmNsYXNzTGlzdC5sZW5ndGggPT09IDEgJiYgYnRuQ2xvc2VNb2RhbC5jbGFzc0xpc3QuY29udGFpbnMoJ2RjZi1idG4tY2xvc2UtbW9kYWwnKSkge1xuICAgICAgICAvLyBJZiBubyBjdXN0b20gY2xhc3NlcyBhcmUgcHJlc2VudCwgYWRkIGRlZmF1bHQgdXRpbGl0eSBjbGFzc2VzIHRvICdjbG9zZScgYnV0dG9uXG4gICAgICAgIGJ0bkNsb3NlTW9kYWwuY2xhc3NMaXN0LmFkZCgnZGNmLWJ0bicsICdkY2YtYnRuLXRlcnRpYXJ5JywgJ2RjZi1hYnNvbHV0ZScsICdkY2YtcGluLXRvcCcsICdkY2YtcGluLXJpZ2h0JywgJ2RjZi16LTEnKTtcbiAgICAgIH1cblxuICAgICAgLy8gQ2hlY2sgbW9kYWwgY29udGVudCBmb3IgYW55IGFkZGl0aW9uYWwgY2xhc3Nlc1xuICAgICAgaWYgKG1vZGFsQ29udGVudC5jbGFzc0xpc3QubGVuZ3RoID09PSAxICYmIG1vZGFsQ29udGVudC5jbGFzc0xpc3QuY29udGFpbnMoJ2RjZi1tb2RhbC1jb250ZW50JykpIHtcbiAgICAgICAgLy8gSWYgbm8gY3VzdG9tIGNsYXNzZXMgYXJlIHByZXNlbnQsIGFkZCBkZWZhdWx0IHV0aWxpdHkgY2xhc3NlcyB0byBtb2RhbCBjb250ZW50XG4gICAgICAgIG1vZGFsQ29udGVudC5jbGFzc0xpc3QuYWRkKCdkY2Ytd3JhcHBlcicsICdkY2YtcGItOCcpO1xuICAgICAgfVxuXG4gICAgICAvLyBTZXQgYXR0cmlidXRlcyBmb3IgZWFjaCAnY2xvc2UnIGJ1dHRvblxuICAgICAgYnRuQ2xvc2VNb2RhbC5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCAnYnV0dG9uJyk7XG4gICAgICBidG5DbG9zZU1vZGFsLnNldEF0dHJpYnV0ZSgnYXJpYS1sYWJlbCcsICdDbG9zZScpO1xuXG4gICAgICB0aGlzLmVzY0xpc3RlbigpO1xuICAgICAgdGhpcy5vdmVybGF5TGlzdGVuKG1vZGFsLCBtb2RhbFdyYXBwZXIpO1xuICAgICAgdGhpcy5idG5DbG9zZUxpc3RlbihidG5DbG9zZU1vZGFsLCBtb2RhbCk7XG5cbiAgICB9XG4gIH1cbn1cblxucmV0dXJuIE1vZGFsO1xufSkpO1xuIiwiOyhmdW5jdGlvbihyb290LCBmYWN0b3J5KSB7XG4gIGlmICh0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpIHtcbiAgICBkZWZpbmUoW10sIGZhY3RvcnkpO1xuICB9IGVsc2UgaWYgKHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0Jykge1xuICAgIG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeSgpO1xuICB9IGVsc2Uge1xuICAgIHJvb3QuZGNmSGVscGVyVXVpZHY0ID0gZmFjdG9yeSgpO1xuICB9XG59KHRoaXMsIGZ1bmN0aW9uKCkge1xuZnVuY3Rpb24gdXVpZHY0KCkge1xuICByZXR1cm4gJ3h4eHh4eHh4LXh4eHgtNHh4eC15eHh4LXh4eHh4eHh4eHh4eCcucmVwbGFjZSgvW3h5XS9nLCBmdW5jdGlvbiAoYykge1xuICAgIHZhciByID0gTWF0aC5yYW5kb20oKSAqIDE2IHwgMCxcbiAgICAgICAgdiA9IGMgPT09ICd4JyA/IHIgOiByICYgMHgzIHwgMHg4O1xuICAgIHJldHVybiB2LnRvU3RyaW5nKDE2KTtcbiAgfSk7XG59XG5cbnJldHVybiB1dWlkdjQ7XG59KSk7XG4iLCIvLyBMYXp5IExvYWRcbmxldCBMYXp5TG9hZCA9IHJlcXVpcmUoJ2RjZi1sYXp5TG9hZCcpO1xuY29uc3QgaW1hZ2VzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnW2xvYWRpbmc9bGF6eV0sIC5kY2YtbGF6eS1sb2FkJyk7XG5jb25zdCBvYnNlcnZlckNvbmZpZyA9IHtcblx0Ly8gZXh0ZW5kIGludGVyc2VjdGlvbiByb290IG1hcmdpbiBieSA1MHB4IHRvIHN0YXJ0IGludGVyc2VjdGlvbiBlYXJsaWVyIGJ5IDUwcHhcblx0cm9vdE1hcmdpbjogJzBweCAwcHggNTBweCAwcHgnLFxuXHR0aHJlc2hvbGQ6IFswLCAwLjQwXVxufTtcbmNvbnN0IGVudGVyQ2xhc3NOYW1lcyA9IFsnZGNmLWZhZGUtaW4nXTtcbmNvbnN0IGV4YW1wbGVMYXp5TG9hZCA9IG5ldyBMYXp5TG9hZChpbWFnZXMsIG9ic2VydmVyQ29uZmlnLCBlbnRlckNsYXNzTmFtZXMpO1xuZXhhbXBsZUxhenlMb2FkLmluaXRpYWxpemUoKTtcblxuXG4vLyBNb2RhbFxubGV0IE1vZGFsID0gcmVxdWlyZSgnZGNmLW1vZGFsJyk7XG5jb25zdCBtb2RhbHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuZGNmLW1vZGFsJyk7XG5jb25zdCBib2R5U2Nyb2xsTG9jayA9IHJlcXVpcmUoJ2JvZHktc2Nyb2xsLWxvY2snKTtcbmNvbnN0IGV4YW1wbGVNb2RhbCA9IG5ldyBNb2RhbChtb2RhbHMsIGJvZHlTY3JvbGxMb2NrKTtcbmV4YW1wbGVNb2RhbC5pbml0aWFsaXplKCk7XG5cblxuLy8gTm90aWNlXG4vLyBsZXQgTm90aWNlID0gcmVxdWlyZSgnZGNmLW5vdGljZScpO1xuLy8gY29uc3Qgbm90aWNlT3B0aW9ucyA9IHtcbi8vIFx0d2lkZ2V0OiAnbm90aWNlJyxcbi8vIFx0J25vdGljZS10eXBlJzogJ2FsZXJ0Jyxcbi8vIFx0YW5pbWF0aW9uOiAndHJ1ZScsXG4vLyBcdGxvY2F0aW9uOiAnZml4ZWRCb3R0b20nLFxuLy8gXHRjb2xsYXBzaWJsZTogJ3RydWUnLFxuLy8gXHRpZDogJ2R5bmFtaWNOb3RpY2UxJ1xuLy8gfTtcbi8vXG4vLyBOb3RpY2UuY3JlYXRlKCdTcGFnaGV0dGkgTW9uc3RlciBMaXZlcycsICdZb3Uga25vdyBubyBzcGFnaGV0dGknLCBub3RpY2VPcHRpb25zKTtcblxuXG4vLyBEYXRlIFBpY2tlclxuLy8gbGV0IGZsYXRwaWNrciA9IHJlcXVpcmUoJ2ZsYXRwaWNrci9mbGF0cGlja3InKTtcbi8vIHJlcXVpcmUoXCJmbGF0cGlja3IvZmxhdHBpY2tyLmNzc1wiKTtcbi8vIGxldCBkYXRlcGlja2VyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW2RhdGEtd2lkZ2V0Kj1cImZsYXRwaWNrclwiXScpO1xuLy8gZmxhdHBpY2tyKGRhdGVwaWNrZXIsIHtcbi8vIFx0ZW5hYmxlVGltZTogdHJ1ZSxcbi8vIFx0ZGF0ZUZvcm1hdDogXCJZLW0tZCBoOmlLXCIsXG4vLyB9KTtcbiIsIiFmdW5jdGlvbihlLHQpe2lmKFwiZnVuY3Rpb25cIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZClkZWZpbmUoW1wiZXhwb3J0c1wiXSx0KTtlbHNlIGlmKFwidW5kZWZpbmVkXCIhPXR5cGVvZiBleHBvcnRzKXQoZXhwb3J0cyk7ZWxzZXt2YXIgbz17fTt0KG8pLGUuYm9keVNjcm9sbExvY2s9b319KHRoaXMsZnVuY3Rpb24oZXhwb3J0cyl7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcihlKXtpZihBcnJheS5pc0FycmF5KGUpKXtmb3IodmFyIHQ9MCxvPUFycmF5KGUubGVuZ3RoKTt0PGUubGVuZ3RoO3QrKylvW3RdPWVbdF07cmV0dXJuIG99cmV0dXJuIEFycmF5LmZyb20oZSl9T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7dmFyIGw9ITE7aWYoXCJ1bmRlZmluZWRcIiE9dHlwZW9mIHdpbmRvdyl7dmFyIGU9e2dldCBwYXNzaXZlKCl7bD0hMH19O3dpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwidGVzdFBhc3NpdmVcIixudWxsLGUpLHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFwidGVzdFBhc3NpdmVcIixudWxsLGUpfXZhciBkPVwidW5kZWZpbmVkXCIhPXR5cGVvZiB3aW5kb3cmJndpbmRvdy5uYXZpZ2F0b3ImJndpbmRvdy5uYXZpZ2F0b3IucGxhdGZvcm0mJi9pUChhZHxob25lfG9kKS8udGVzdCh3aW5kb3cubmF2aWdhdG9yLnBsYXRmb3JtKSxjPVtdLHU9ITEsYT0tMSxzPXZvaWQgMCx2PXZvaWQgMCxmPWZ1bmN0aW9uKHQpe3JldHVybiBjLnNvbWUoZnVuY3Rpb24oZSl7cmV0dXJuISghZS5vcHRpb25zLmFsbG93VG91Y2hNb3ZlfHwhZS5vcHRpb25zLmFsbG93VG91Y2hNb3ZlKHQpKX0pfSxtPWZ1bmN0aW9uKGUpe3ZhciB0PWV8fHdpbmRvdy5ldmVudDtyZXR1cm4hIWYodC50YXJnZXQpfHwoMTx0LnRvdWNoZXMubGVuZ3RofHwodC5wcmV2ZW50RGVmYXVsdCYmdC5wcmV2ZW50RGVmYXVsdCgpLCExKSl9LG89ZnVuY3Rpb24oKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dm9pZCAwIT09diYmKGRvY3VtZW50LmJvZHkuc3R5bGUucGFkZGluZ1JpZ2h0PXYsdj12b2lkIDApLHZvaWQgMCE9PXMmJihkb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93PXMscz12b2lkIDApfSl9O2V4cG9ydHMuZGlzYWJsZUJvZHlTY3JvbGw9ZnVuY3Rpb24oaSxlKXtpZihkKXtpZighaSlyZXR1cm4gdm9pZCBjb25zb2xlLmVycm9yKFwiZGlzYWJsZUJvZHlTY3JvbGwgdW5zdWNjZXNzZnVsIC0gdGFyZ2V0RWxlbWVudCBtdXN0IGJlIHByb3ZpZGVkIHdoZW4gY2FsbGluZyBkaXNhYmxlQm9keVNjcm9sbCBvbiBJT1MgZGV2aWNlcy5cIik7aWYoaSYmIWMuc29tZShmdW5jdGlvbihlKXtyZXR1cm4gZS50YXJnZXRFbGVtZW50PT09aX0pKXt2YXIgdD17dGFyZ2V0RWxlbWVudDppLG9wdGlvbnM6ZXx8e319O2M9W10uY29uY2F0KHIoYyksW3RdKSxpLm9udG91Y2hzdGFydD1mdW5jdGlvbihlKXsxPT09ZS50YXJnZXRUb3VjaGVzLmxlbmd0aCYmKGE9ZS50YXJnZXRUb3VjaGVzWzBdLmNsaWVudFkpfSxpLm9udG91Y2htb3ZlPWZ1bmN0aW9uKGUpe3ZhciB0LG8sbixyOzE9PT1lLnRhcmdldFRvdWNoZXMubGVuZ3RoJiYobz1pLHI9KHQ9ZSkudGFyZ2V0VG91Y2hlc1swXS5jbGllbnRZLWEsIWYodC50YXJnZXQpJiYobyYmMD09PW8uc2Nyb2xsVG9wJiYwPHI/bSh0KToobj1vKSYmbi5zY3JvbGxIZWlnaHQtbi5zY3JvbGxUb3A8PW4uY2xpZW50SGVpZ2h0JiZyPDA/bSh0KTp0LnN0b3BQcm9wYWdhdGlvbigpKSl9LHV8fChkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwidG91Y2htb3ZlXCIsbSxsP3twYXNzaXZlOiExfTp2b2lkIDApLHU9ITApfX1lbHNle249ZSxzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7aWYodm9pZCAwPT09dil7dmFyIGU9ISFuJiYhMD09PW4ucmVzZXJ2ZVNjcm9sbEJhckdhcCx0PXdpbmRvdy5pbm5lcldpZHRoLWRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRXaWR0aDtlJiYwPHQmJih2PWRvY3VtZW50LmJvZHkuc3R5bGUucGFkZGluZ1JpZ2h0LGRvY3VtZW50LmJvZHkuc3R5bGUucGFkZGluZ1JpZ2h0PXQrXCJweFwiKX12b2lkIDA9PT1zJiYocz1kb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93LGRvY3VtZW50LmJvZHkuc3R5bGUub3ZlcmZsb3c9XCJoaWRkZW5cIil9KTt2YXIgbz17dGFyZ2V0RWxlbWVudDppLG9wdGlvbnM6ZXx8e319O2M9W10uY29uY2F0KHIoYyksW29dKX12YXIgbn0sZXhwb3J0cy5jbGVhckFsbEJvZHlTY3JvbGxMb2Nrcz1mdW5jdGlvbigpe2Q/KGMuZm9yRWFjaChmdW5jdGlvbihlKXtlLnRhcmdldEVsZW1lbnQub250b3VjaHN0YXJ0PW51bGwsZS50YXJnZXRFbGVtZW50Lm9udG91Y2htb3ZlPW51bGx9KSx1JiYoZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInRvdWNobW92ZVwiLG0sbD97cGFzc2l2ZTohMX06dm9pZCAwKSx1PSExKSxjPVtdLGE9LTEpOihvKCksYz1bXSl9LGV4cG9ydHMuZW5hYmxlQm9keVNjcm9sbD1mdW5jdGlvbih0KXtpZihkKXtpZighdClyZXR1cm4gdm9pZCBjb25zb2xlLmVycm9yKFwiZW5hYmxlQm9keVNjcm9sbCB1bnN1Y2Nlc3NmdWwgLSB0YXJnZXRFbGVtZW50IG11c3QgYmUgcHJvdmlkZWQgd2hlbiBjYWxsaW5nIGVuYWJsZUJvZHlTY3JvbGwgb24gSU9TIGRldmljZXMuXCIpO3Qub250b3VjaHN0YXJ0PW51bGwsdC5vbnRvdWNobW92ZT1udWxsLGM9Yy5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuIGUudGFyZ2V0RWxlbWVudCE9PXR9KSx1JiYwPT09Yy5sZW5ndGgmJihkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwidG91Y2htb3ZlXCIsbSxsP3twYXNzaXZlOiExfTp2b2lkIDApLHU9ITEpfWVsc2UoYz1jLmZpbHRlcihmdW5jdGlvbihlKXtyZXR1cm4gZS50YXJnZXRFbGVtZW50IT09dH0pKS5sZW5ndGh8fG8oKX19KTtcbiJdfQ=="}